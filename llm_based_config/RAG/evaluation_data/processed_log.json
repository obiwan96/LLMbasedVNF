[
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-nr5cp\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"vnf-container\",",
        "+ Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- #!/bin/bash",
        "- # Update package lists",
        "- apt-get update",
        "-",
        "- # Install necessary packages",
        "- apt-get install -y iptables",
        "-",
        "- # Flush existing rules",
        "- iptables -F",
        "-",
        "- # Set default policies to DROP for INPUT and FORWARD chains.",
        "- iptables -P INPUT DROP",
        "- iptables -P FORWARD DROP",
        "-",
        "- # Allow loopback interface traffic in the INPUT chain.",
        "- iptables -A INPUT -i lo -j ACCEPT",
        "-",
        "- # Allow established connections in the INPUT chain.",
        "- iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "-",
        "- # Allow traffic from the allowed subnet in the INPUT chain.",
        "- iptables -A INPUT -s 10.244.0.0/16 -j ACCEPT",
        "-",
        "- # Log dropped packets (optional).",
        "- iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "-",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 10.244.0.0/16\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: nil,",
        "+ Limits: core.ResourceList{",
        "+ s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "+ },",
        "- Requests: nil,",
        "+ Requests: core.ResourceList{",
        "+ s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "+ },",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-nr5cp\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "]\",\"reason\":\"Invalid\",\"details\":{\"name\":\"firewall-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueInvalid\",\"message\":\"Invalid value: \"BestEffort\": Pod QoS is immutable\",\"field\":\"metadata\"},{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-nr5cp\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"vnf-container\",",
        "+ Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- #!/bin/bash",
        "- # Update package lists",
        "- apt-get update",
        "-",
        "- # Install necessary packages",
        "- apt-get install -y iptables",
        "-",
        "- # Flush existing rules",
        "- iptables -F",
        "-",
        "- # Set default policies to DROP for INPUT and FORWARD chains.",
        "- iptables -P INPUT DROP",
        "- iptables -P FORWARD DROP",
        "-",
        "- # Allow loopback interface traffic in the INPUT chain.",
        "- iptables -A INPUT -i lo -j ACCEPT",
        "-",
        "- # Allow established connections in the INPUT chain.",
        "- iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "-",
        "- # Allow traffic from the allowed subnet in the INPUT chain.",
        "- iptables -A INPUT -s 10.244.0.0/16 -j ACCEPT",
        "-",
        "- # Log dropped packets (optional).",
        "- iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "-",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 10.244.0.0/16\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: nil,",
        "+ Limits: core.ResourceList{",
        "+ s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "+ },",
        "- Requests: nil,",
        "+ Requests: core.ResourceList{",
        "+ s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "+ },",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-nr5cp\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "add-apt-repository ppa:ntop/ntop",
        "apt update",
        "apt install -y ntopng",
        "echo \"-i=eth0\" >> /etc/ntopng/ntopng.conf",
        "echo \"--report-protocols\" >> /etc/ntopng/ntopng.conf",
        "ntopng -i eth0 --report-protocols & sleep infinity",
        "\"],\"command\":[\"/bin/bash\",\"-c\"],\"env\":[{\"name\":\"NTOPNG_INTERFACE\",\"value\":\"eth0\"},{\"name\":\"NTOPNG_REPORT_PROTOCOLS\",\"value\":\"true\"}],\"image\":\"ntop/ntop\",\"name\":\"ntopng\",\"ports\":{\"containerPort\":3000}},{\"args\":[\"#!/bin/bash",
        ".... (Script for configuring iptables to block traffic except subnets within `10.244.0.0/16`)",
        "\"],\"command\":[\"/bin/bash\",\"-c\"],\"image\":\"alexellis/nmap\",\"name\":\"firewall\"}],\"dnsConfig\":{\"nameservers\":[\"10.99.30.112\"]},\"dnsPolicy\":\"None\",\"enableServiceLinks\":true,\"nodeName\":\"kube-172\",\"preemptionPolicy\":\"PreemptLowerPriority\",\"priority\":0,\"restartPolicy\":\"Always\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"serviceAccount\":\"default\",\"serviceAccountName\":\"default\",\"terminationGracePeriodSeconds\":30,\"tolerations\":[{\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"effect\":\"NoExecute\",\"tolerationSeconds\":300},{\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"effect\":\"NoExecute\",\"tolerationSeconds\":300}],\"volumes\":[{\"name\":\"kube-api-access-ngnpn\",\"projected\":{\"sources\":[{\"serviceAccountToken\":{\"expirationSeconds\":3607,\"path\":\"token\"}},{\"configMap\":{\"name\":\"kube-root-ca.crt\",\"items\":[{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}]}},{\"downwardAPI\":{\"items\":[{\"path\":\"namespace\",\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}]}}],\"defaultMode\":420}}]},\"status\":{\"phase\":\"Running\",\"conditions\":[{\"type\":\"PodReadyToStartContainers\",\"status\":\"True\",\"lastProbeTime\":null,\"lastTransitionTime\":\"2025-05-29T10:59:36Z\"},{\"type\":\"Initialized\",\"status\":\"True\",\"lastProbeTime\":null,\"lastTransitionTime\":\"2025-05-29T10:59:33Z\"},{\"type\":\"Ready\",\"status\":\"True\",\"lastProbeTime\":null,\"lastTransitionTime\":\"2025-05-29T10:59:36Z\"},{\"type\":\"ContainersReady\",\"status\":\"True\",\"lastProbeTime\":null,\"lastTransitionTime\":\"2025-05-29T10:59:36Z\"},{\"type\":\"PodScheduled\",\"status\":\"True\",\"lastProbeTime\":null,\"lastTransitionTime\":\"2025-05-29T10:59:33Z\"}],\"hostIP\":\"141.223.181.172\",\"hostIPs\":[{\"ip\":\"141.223.181.172\"}],\"podIP\":\"10.244.12.63\",\"podIPs\":[{\"ip\":\"10.244.12.63\"}],\"startTime\":\"2025-05-29T10:59:33Z\",\"containerStatuses\":[{\"name\":\"firewall-container\",\"state\":{\"running\":{\"startedAt\":\"2025-05-29T10:59:35Z\"}},\"lastState\":{},\"ready\":true,\"restartCount\":0,\"image\":\"docker.io/dokken/ubuntu-20.04:latest\",\"imageID\":\"docker.io/dokken/ubuntu-20.04@sha256:61c700117df72aeeb84838caf8f408be3bdd6e776f1e5696d1fdfeea0c3ca4e0\",\"containerID\":\"containerd://ce4c18a8d91b6b856f2781c69c8ee502685bc78aecf12c6a4f01d7e78526e0e4\",\"started\":true}],\"qosClass\":\"BestEffort\"}}\": json: cannot unmarshal object into Go struct field Container.spec.containers.ports of type []v1.ContainerPort\",\"reason\":\"Invalid\",\"details\":{\"causes\":[{\"reason\":\"FieldValueInvalid\",\"message\":\"Invalid value: \"{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"creationTimestamp\":\"2025-05-29T10:59:33Z\",\"deletionGracePeriodSeconds\":30,\"deletionTimestamp\":\"2025-05-29T11:02:42Z\",\"managedFields\":[{\"manager\":\"OpenAPI-Generator\",\"operation\":\"Update\",\"apiVersion\":\"v1\",\"time\":\"2025-05-29T10:59:33Z\",\"fieldsType\":\"FieldsV1\",\"fieldsV1\":{\"f:spec\":{\"f:containers\":{\"k:{\"name\":\"firewall-container\"}\":{\".\":{},\"f:args\":{},\"f:command\":{},\"f:image\":{},\"f:imagePullPolicy\":{},\"f:name\":{},\"f:resources\":{},\"f:securityContext\":{\".\":{},\"f:privileged\":{}},\"f:terminationMessagePath\":{},\"f:terminationMessagePolicy\":{}}},\"f:dnsConfig\":{\".\":{},\"f:nameservers\":{}},\"f:dnsPolicy\":{},\"f:enableServiceLinks\":{},\"f:restartPolicy\":{},\"f:schedulerName\":{},\"f:securityContext\":{},\"f:terminationGracePeriodSeconds\":{}}}},{\"manager\":\"kubelet\",\"operation\":\"Update\",\"apiVersion\":\"v1\",\"time\":\"2025-05-29T10:59:36Z\",\"fieldsType\":\"FieldsV1\",\"fieldsV1\":{\"f:status\":{\"f:conditions\":{\"k:{\"type\":\"ContainersReady\"}\":{\".\":{},\"f:lastProbeTime\":{},\"f:lastTransitionTime\":{},\"f:status\":{},\"f:type\":{}},\"k:{\"type\":\"Initialized\"}\":{\".\":{},\"f:lastProbeTime\":{},\"f:lastTransitionTime\":{},\"f:status\":{},\"f:type\":{}},\"k:{\"type\":\"PodReadyToStartContainers\"}\":{\".\":{},\"f:lastProbeTime\":{},\"f:lastTransitionTime\":{},\"f:status\":{},\"f:type\":{}},\"k:{\"type\":\"Ready\"}\":{\".\":{},\"f:lastProbeTime\":{},\"f:lastTransitionTime\":{},\"f:status\":{},\"f:type\":{}}},\"f:containerStatuses\":{},\"f:hostIP\":{},\"f:hostIPs\":{},\"f:phase\":{},\"f:podIP\":{},\"f:podIPs\":{\".\":{},\"k:{\"ip\":\"10.244.12.63\"}\":{\".\":{},\"f:ip\":{}}},\"f:startTime\":{}}},\"subresource\":\"status\"}],\"name\":\"firewall-pod\",\"namespace\":\"llm-config\",\"resourceVersion\":\"11386050\",\"uid\":\"57ad2958-d31e-41aa-aae1-b1f313c82df5\"},\"spec\":{\"containers\":[{\"args\":[\"apt update && apt install -y software-properties-common",
        "add-apt-repository ppa:ntop/ntop",
        "apt update",
        "apt install -y ntopng",
        "echo \"-i=eth0\" >> /etc/ntopng/ntopng.conf",
        "echo \"--report-protocols\" >> /etc/ntopng/ntopng.conf",
        "ntopng -i eth0 --report-protocols & sleep infinity",
        "\"],\"command\":[\"/bin/bash\",\"-c\"],\"env\":[{\"name\":\"NTOPNG_INTERFACE\",\"value\":\"eth0\"},{\"name\":\"NTOPNG_REPORT_PROTOCOLS\",\"value\":\"true\"}],\"image\":\"ntop/ntop\",\"name\":\"ntopng\",\"ports\":{\"containerPort\":3000}},{\"args\":[\"#!/bin/bash",
        ".... (Script for configuring iptables to block traffic except subnets within `10.244.0.0/16`)",
        "\"],\"command\":[\"/bin/bash\",\"-c\"],\"image\":\"alexellis/nmap\",\"name\":\"firewall\"}],\"dnsConfig\":{\"nameservers\":[\"10.99.30.112\"]},\"dnsPolicy\":\"None\",\"enableServiceLinks\":true,\"nodeName\":\"kube-172\",\"preemptionPolicy\":\"PreemptLowerPriority\",\"priority\":0,\"restartPolicy\":\"Always\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"serviceAccount\":\"default\",\"serviceAccountName\":\"default\",\"terminationGracePeriodSeconds\":30,\"tolerations\":[{\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"effect\":\"NoExecute\",\"tolerationSeconds\":300},{\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"effect\":\"NoExecute\",\"tolerationSeconds\":300}],\"volumes\":[{\"name\":\"kube-api-access-ngnpn\",\"projected\":{\"sources\":[{\"serviceAccountToken\":{\"expirationSeconds\":3607,\"path\":\"token\"}},{\"configMap\":{\"name\":\"kube-root-ca.crt\",\"items\":[{\"key\":\"ca.crt\",\"path\":\"ca.crt\"}]}},{\"downwardAPI\":{\"items\":[{\"path\":\"namespace\",\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}]}}],\"defaultMode\":420}}]},\"status\":{\"phase\":\"Running\",\"conditions\":[{\"type\":\"PodReadyToStartContainers\",\"status\":\"True\",\"lastProbeTime\":null,\"lastTransitionTime\":\"2025-05-29T10:59:36Z\"},{\"type\":\"Initialized\",\"status\":\"True\",\"lastProbeTime\":null,\"lastTransitionTime\":\"2025-05-29T10:59:33Z\"},{\"type\":\"Ready\",\"status\":\"True\",\"lastProbeTime\":null,\"lastTransitionTime\":\"2025-05-29T10:59:36Z\"},{\"type\":\"ContainersReady\",\"status\":\"True\",\"lastProbeTime\":null,\"lastTransitionTime\":\"2025-05-29T10:59:36Z\"},{\"type\":\"PodScheduled\",\"status\":\"True\",\"lastProbeTime\":null,\"lastTransitionTime\":\"2025-05-29T10:59:33Z\"}],\"hostIP\":\"141.223.181.172\",\"hostIPs\":[{\"ip\":\"141.223.181.172\"}],\"podIP\":\"10.244.12.63\",\"podIPs\":[{\"ip\":\"10.244.12.63\"}],\"startTime\":\"2025-05-29T10:59:33Z\",\"containerStatuses\":[{\"name\":\"firewall-container\",\"state\":{\"running\":{\"startedAt\":\"2025-05-29T10:59:35Z\"}},\"lastState\":{},\"ready\":true,\"restartCount\":0,\"image\":\"docker.io/dokken/ubuntu-20.04:latest\",\"imageID\":\"docker.io/dokken/ubuntu-20.04@sha256:61c700117df72aeeb84838caf8f408be3bdd6e776f1e5696d1fdfeea0c3ca4e0\",\"containerID\":\"containerd://ce4c18a8d91b6b856f2781c69c8ee502685bc78aecf12c6a4f01d7e78526e0e4\",\"started\":true}],\"qosClass\":\"BestEffort\"}}\": json: cannot unmarshal object into Go struct field Container.spec.containers.ports of type []v1.ContainerPort\",\"field\":\"patch\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-2h6h4\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- # Set the DNS server explicitly to ensure network reachability",
        "- echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "-",
        "- # Retry mechanism for apt update and install commands",
        "- until apt-get update; do sleep 5; done",
        "-",
        "- apt-get install -y build-essential git cmake libpcap-dev",
        "-",
        "- # Clone nDPI repository",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "-",
        "- # Build and install nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "-",
        "- # Configure ndpi.conf to block traffic except 10.244.0.0/16",
        "- echo \"subnet = 10.244.0.0/16\" > /etc/ndpi.conf",
        "-",
        "- # Start nDPI in background and keep the container running with sleep infinity",
        "- ndpiReader -i eth0 -b &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-2h6h4\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"ndpi-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-2h6h4\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- # Set the DNS server explicitly to ensure network reachability",
        "- echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "-",
        "- # Retry mechanism for apt update and install commands",
        "- until apt-get update; do sleep 5; done",
        "-",
        "- apt-get install -y build-essential git cmake libpcap-dev",
        "-",
        "- # Clone nDPI repository",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "-",
        "- # Build and install nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "-",
        "- # Configure ndpi.conf to block traffic except 10.244.0.0/16",
        "- echo \"subnet = 10.244.0.0/16\" > /etc/ndpi.conf",
        "-",
        "- # Start nDPI in background and keep the container running with sleep infinity",
        "- ndpiReader -i eth0 -b &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-2h6h4\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-5qms6\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"suricata-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update --fix-missing &&",
        "- apt-get install -y software-properties-common &&",
        "- add-apt-repository ppa:oisf/suricata-stable &&",
        "- apt-get update --fix-missing &&",
        "- apt-get install -y suricata &&",
        "- sed -i 's/^#rule-files:/rule-files:/g' /etc/suricata/suricata.yaml &&",
        "- sed -i '/^# - suricata.rules/a\\ - suricata.rules' /etc/suricata/suricata.yaml &&",
        "- suricata -c /etc/suricata/suricata.yaml --interface=eth0 &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ add-apt-repository ppa:ondrej/suricata -y",
        "+ apt update && apt install -y suricata",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/suricata/suricata.yaml",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ suricata -c /etc/suricata/suricata.yaml -i eth0 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-5qms6\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"suricata-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-5qms6\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"suricata-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update --fix-missing &&",
        "- apt-get install -y software-properties-common &&",
        "- add-apt-repository ppa:oisf/suricata-stable &&",
        "- apt-get update --fix-missing &&",
        "- apt-get install -y suricata &&",
        "- sed -i 's/^#rule-files:/rule-files:/g' /etc/suricata/suricata.yaml &&",
        "- sed -i '/^# - suricata.rules/a\\ - suricata.rules' /etc/suricata/suricata.yaml &&",
        "- suricata -c /etc/suricata/suricata.yaml --interface=eth0 &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ add-apt-repository ppa:ondrej/suricata -y",
        "+ apt update && apt install -y suricata",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/suricata/suricata.yaml",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ suricata -c /etc/suricata/suricata.yaml -i eth0 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-5qms6\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-v2qg6\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"ntopng\",",
        "+ Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: []string{",
        "\"/bin/bash\",",
        "\"-c\",",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y software-properties-common",
        "- add-apt-repository ppa:ntop/ntop",
        "- apt update",
        "- apt install -y ntopng",
        "- echo \"-i=eth0\" >> /etc/ntopng/ntopng.conf",
        "- echo \"--http-port=3000\" >> /etc/ntopng/ntopng.conf",
        "- echo \"--report-protocols\" >> /etc/ntopng/ntopng.conf",
        "- ntopng -i eth0 --http-port=3000 --report-protocols &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "},",
        "- Args: nil,",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.100.80.140\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "- Ports: []core.ContainerPort{{ContainerPort: 3000, Protocol: \"TCP\"}},",
        "+ Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 500, scale: -3}, s: \"500m\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 1073741824}, s: \"1Gi\", Format: \"BinarySI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "},",
        "Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 250, scale: -3}, s: \"250m\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 536870912}, Format: \"BinarySI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "},",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-v2qg6\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"ntopng-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-v2qg6\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"ntopng\",",
        "+ Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: []string{",
        "\"/bin/bash\",",
        "\"-c\",",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y software-properties-common",
        "- add-apt-repository ppa:ntop/ntop",
        "- apt update",
        "- apt install -y ntopng",
        "- echo \"-i=eth0\" >> /etc/ntopng/ntopng.conf",
        "- echo \"--http-port=3000\" >> /etc/ntopng/ntopng.conf",
        "- echo \"--report-protocols\" >> /etc/ntopng/ntopng.conf",
        "- ntopng -i eth0 --http-port=3000 --report-protocols &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "},",
        "- Args: nil,",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.100.80.140\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "- Ports: []core.ContainerPort{{ContainerPort: 3000, Protocol: \"TCP\"}},",
        "+ Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 500, scale: -3}, s: \"500m\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 1073741824}, s: \"1Gi\", Format: \"BinarySI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "},",
        "Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 250, scale: -3}, s: \"250m\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 536870912}, Format: \"BinarySI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "},",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-v2qg6\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-58t25\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"mycontainer\",",
        "+ Name: \"ntopng\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update && apt-get install -y iputils-ping",
        "- echo \"Setting up the container...\"",
        "- # Add your VNF setup commands here. For example:",
        "- # ./configure && make && make install",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ add-apt-repository ppa:ntop/ntop",
        "+ apt update",
        "+ apt install -y ntopng",
        "+ echo \"-i=eth0\" >> /etc/ntopng/ntopng.conf",
        "+ echo \"--report-protocols\" >> /etc/ntopng/ntopng.conf",
        "+ ntopng -i eth0 --report-protocols & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-58t25\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "TerminationGracePeriodSeconds: &30,",
        "ActiveDeadlineSeconds: nil,",
        "- DNSPolicy: \"ClusterFirst\",",
        "+ DNSPolicy: \"None\",",
        "NodeSelector: nil,",
        "ServiceAccountName: \"default\",",
        "... // 12 identical fields",
        "Priority: &0,",
        "PreemptionPolicy: &\"PreemptLowerPriority\",",
        "- DNSConfig: nil,",
        "+ DNSConfig: &core.PodDNSConfig{Nameservers: []string{\"10.99.30.112\"}},",
        "ReadinessGates: nil,",
        "RuntimeClassName: nil,",
        "... // 6 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"ntopng-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-58t25\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"mycontainer\",",
        "+ Name: \"ntopng\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update && apt-get install -y iputils-ping",
        "- echo \"Setting up the container...\"",
        "- # Add your VNF setup commands here. For example:",
        "- # ./configure && make && make install",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ add-apt-repository ppa:ntop/ntop",
        "+ apt update",
        "+ apt install -y ntopng",
        "+ echo \"-i=eth0\" >> /etc/ntopng/ntopng.conf",
        "+ echo \"--report-protocols\" >> /etc/ntopng/ntopng.conf",
        "+ ntopng -i eth0 --report-protocols & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-58t25\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "TerminationGracePeriodSeconds: &30,",
        "ActiveDeadlineSeconds: nil,",
        "- DNSPolicy: \"ClusterFirst\",",
        "+ DNSPolicy: \"None\",",
        "NodeSelector: nil,",
        "ServiceAccountName: \"default\",",
        "... // 12 identical fields",
        "Priority: &0,",
        "PreemptionPolicy: &\"PreemptLowerPriority\",",
        "- DNSConfig: nil,",
        "+ DNSConfig: &core.PodDNSConfig{Nameservers: []string{\"10.99.30.112\"}},",
        "ReadinessGates: nil,",
        "RuntimeClassName: nil,",
        "... // 6 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [],
    [],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-sngkz\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update && apt-get install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- cd /tmp/nDPI",
        "- mkdir -p build",
        "- cd build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"[ndpi]\" > /etc/ndpi.conf",
        "- echo \"subnet = 192.168.1.0/24\" >> /etc/ndpi.conf",
        "- echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "- ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-sngkz\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"ndpi-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-sngkz\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update && apt-get install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- cd /tmp/nDPI",
        "- mkdir -p build",
        "- cd build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"[ndpi]\" > /etc/ndpi.conf",
        "- echo \"subnet = 192.168.1.0/24\" >> /etc/ndpi.conf",
        "- echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "- ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-sngkz\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-n84tc\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "- echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "- ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && DEBIAN_FRONTEND=noninteractive apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ cd /tmp/nDPI",
        "+ mkdir -p build && cd build",
        "+ cmake .. && make && sudo make install",
        "+ echo \"subnet = 192.168.1.0/24\" | sudo tee /etc/ndpi.conf > /dev/null",
        "+ echo \"nameserver 10.99.30.112\" | sudo tee /etc/resolv.conf > /dev/null",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 &",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-n84tc\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"ndpi-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-n84tc\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "- echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "- ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && DEBIAN_FRONTEND=noninteractive apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ cd /tmp/nDPI",
        "+ mkdir -p build && cd build",
        "+ cmake .. && make && sudo make install",
        "+ echo \"subnet = 192.168.1.0/24\" | sudo tee /etc/ndpi.conf > /dev/null",
        "+ echo \"nameserver 10.99.30.112\" | sudo tee /etc/resolv.conf > /dev/null",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 &",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-n84tc\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-2pfmf\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"firewall-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- #!/bin/bash",
        "-",
        "- # Update package list and install iptables",
        "- apt-get update && apt-get install -y iptables",
        "-",
        "- # Flush existing rules",
        "- iptables -F",
        "-",
        "- # Set default policies to DROP for INPUT and FORWARD chains.",
        "- iptables -P INPUT DROP",
        "- iptables -P FORWARD DROP",
        "- iptables -P OUTPUT ACCEPT",
        "-",
        "- # Allow loopback interface traffic in the INPUT chain.",
        "- iptables -A INPUT -i lo -j ACCEPT",
        "-",
        "- # Allow established connections in the INPUT chain.",
        "- iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "-",
        "- # Allow specific ports (22 and 80) in the INPUT chain.",
        "- iptables -A INPUT -p tcp --dport 22 -j ACCEPT",
        "- iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "-",
        "- # Log dropped packets (optional).",
        "- iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "-",
        "- # Keep the container running indefinitely.",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ #!/bin/bash",
        "+",
        "+ # Install necessary tools",
        "+ apt-get update && apt-get install -y iptables",
        "+",
        "+ # Flush existing rules",
        "+ iptables -F",
        "+",
        "+ # Set default policies to DROP for INPUT and FORWARD chains.",
        "+ iptables -P INPUT DROP",
        "+ iptables -P FORWARD DROP",
        "+",
        "+ # Allow loopback interface traffic in the INPUT chain.",
        "+ iptables -A INPUT -i lo -j ACCEPT",
        "+",
        "+ # Allow established connections in the INPUT chain.",
        "+ iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "+",
        "+ # Allow SSH port 22",
        "+ iptables -A INPUT -p tcp --dport 22 -j ACCEPT",
        "+",
        "+ # Allow HTTP port 80",
        "+ iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "+",
        "+ # Log dropped packets (optional).",
        "+ iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "+",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Limits: nil,",
        "- Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 500, scale: -3}, s: \"500m\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 1073741824}, s: \"1Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Requests: nil,",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-2pfmf\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "]\",\"reason\":\"Invalid\",\"details\":{\"name\":\"firewall-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueInvalid\",\"message\":\"Invalid value: \"Burstable\": Pod QoS is immutable\",\"field\":\"metadata\"},{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-2pfmf\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"firewall-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- #!/bin/bash",
        "-",
        "- # Update package list and install iptables",
        "- apt-get update && apt-get install -y iptables",
        "-",
        "- # Flush existing rules",
        "- iptables -F",
        "-",
        "- # Set default policies to DROP for INPUT and FORWARD chains.",
        "- iptables -P INPUT DROP",
        "- iptables -P FORWARD DROP",
        "- iptables -P OUTPUT ACCEPT",
        "-",
        "- # Allow loopback interface traffic in the INPUT chain.",
        "- iptables -A INPUT -i lo -j ACCEPT",
        "-",
        "- # Allow established connections in the INPUT chain.",
        "- iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "-",
        "- # Allow specific ports (22 and 80) in the INPUT chain.",
        "- iptables -A INPUT -p tcp --dport 22 -j ACCEPT",
        "- iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "-",
        "- # Log dropped packets (optional).",
        "- iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "-",
        "- # Keep the container running indefinitely.",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ #!/bin/bash",
        "+",
        "+ # Install necessary tools",
        "+ apt-get update && apt-get install -y iptables",
        "+",
        "+ # Flush existing rules",
        "+ iptables -F",
        "+",
        "+ # Set default policies to DROP for INPUT and FORWARD chains.",
        "+ iptables -P INPUT DROP",
        "+ iptables -P FORWARD DROP",
        "+",
        "+ # Allow loopback interface traffic in the INPUT chain.",
        "+ iptables -A INPUT -i lo -j ACCEPT",
        "+",
        "+ # Allow established connections in the INPUT chain.",
        "+ iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "+",
        "+ # Allow SSH port 22",
        "+ iptables -A INPUT -p tcp --dport 22 -j ACCEPT",
        "+",
        "+ # Allow HTTP port 80",
        "+ iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "+",
        "+ # Log dropped packets (optional).",
        "+ iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "+",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Limits: nil,",
        "- Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 500, scale: -3}, s: \"500m\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 1073741824}, s: \"1Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Requests: nil,",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-2pfmf\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-x58bn\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"ndpi-container\",",
        "+ Name: \"ntopng\",",
        "Image: \"nginx\",",
        "Command: []string{",
        "\"/bin/bash\",",
        "\"-c\",",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ add-apt-repository ppa:ntop/ntop",
        "+ apt update",
        "+ apt install -y ntopng",
        "+ echo \"-i=eth0\" >> /etc/ntopng/ntopng.conf",
        "+ echo \"--report-protocols\" >> /etc/ntopng/ntopng.conf",
        "+ ntopng -i eth0 --report-protocols & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "- echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "- ndpiReader -i eth0 -s 192.168.1.0/24 -p 22,80 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: nil,",
        "WorkingDir: \"\",",
        "- Ports: nil,",
        "+ Ports: []core.ContainerPort{{ContainerPort: 3000, Protocol: \"TCP\"}},",
        "EnvFrom: nil,",
        "- Env: nil,",
        "+ Env: []core.EnvVar{",
        "+ {Name: \"NTOPNG_INTERFACE\", Value: \"eth0\"},",
        "+ {Name: \"NTOPNG_REPORT_PROTOCOLS\", Value: \"true\"},",
        "+ },",
        "Resources: core.ResourceRequirements{",
        "- Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Limits: nil,",
        "- Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Requests: nil,",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-x58bn\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: &core.SecurityContext{Privileged: &true},",
        "+ SecurityContext: nil,",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "]\",\"reason\":\"Invalid\",\"details\":{\"name\":\"firewall-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueInvalid\",\"message\":\"Invalid value: \"Burstable\": Pod QoS is immutable\",\"field\":\"metadata\"},{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-x58bn\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"ndpi-container\",",
        "+ Name: \"ntopng\",",
        "Image: \"nginx\",",
        "Command: []string{",
        "\"/bin/bash\",",
        "\"-c\",",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ add-apt-repository ppa:ntop/ntop",
        "+ apt update",
        "+ apt install -y ntopng",
        "+ echo \"-i=eth0\" >> /etc/ntopng/ntopng.conf",
        "+ echo \"--report-protocols\" >> /etc/ntopng/ntopng.conf",
        "+ ntopng -i eth0 --report-protocols & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "- echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "- ndpiReader -i eth0 -s 192.168.1.0/24 -p 22,80 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: nil,",
        "WorkingDir: \"\",",
        "- Ports: nil,",
        "+ Ports: []core.ContainerPort{{ContainerPort: 3000, Protocol: \"TCP\"}},",
        "EnvFrom: nil,",
        "- Env: nil,",
        "+ Env: []core.EnvVar{",
        "+ {Name: \"NTOPNG_INTERFACE\", Value: \"eth0\"},",
        "+ {Name: \"NTOPNG_REPORT_PROTOCOLS\", Value: \"true\"},",
        "+ },",
        "Resources: core.ResourceRequirements{",
        "- Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Limits: nil,",
        "- Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Requests: nil,",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-x58bn\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: &core.SecurityContext{Privileged: &true},",
        "+ SecurityContext: nil,",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-x58bn\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"ndpi-container\",",
        "+ Name: \"firewall-container\",",
        "Image: \"nginx\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "- echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "- ndpiReader -i eth0 -s 192.168.1.0/24 -p 22,80 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y iptables",
        "+",
        "+ # Flush existing rules",
        "+ iptables -F",
        "+",
        "+ # Set default policies to DROP for INPUT and FORWARD chains.",
        "+ iptables -P INPUT DROP",
        "+ iptables -P FORWARD DROP",
        "+ iptables -P OUTPUT ACCEPT",
        "+",
        "+ # Allow loopback interface traffic in the INPUT chain.",
        "+ iptables -A INPUT -i lo -j ACCEPT",
        "+",
        "+ # Allow established connections in the INPUT chain.",
        "+ iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "+",
        "+ # Allow traffic on port 22 (SSH) and port 80 (HTTP)",
        "+ iptables -A INPUT -p tcp --dport 22 -j ACCEPT",
        "+ iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "+",
        "+ # Log dropped packets (optional).",
        "+ iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "+",
        "+ # Keep the container running indefinitely.",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Limits: nil,",
        "- Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Requests: nil,",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-x58bn\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "]\",\"reason\":\"Invalid\",\"details\":{\"name\":\"firewall-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueInvalid\",\"message\":\"Invalid value: \"Burstable\": Pod QoS is immutable\",\"field\":\"metadata\"},{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-x58bn\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"ndpi-container\",",
        "+ Name: \"firewall-container\",",
        "Image: \"nginx\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "- echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "- ndpiReader -i eth0 -s 192.168.1.0/24 -p 22,80 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y iptables",
        "+",
        "+ # Flush existing rules",
        "+ iptables -F",
        "+",
        "+ # Set default policies to DROP for INPUT and FORWARD chains.",
        "+ iptables -P INPUT DROP",
        "+ iptables -P FORWARD DROP",
        "+ iptables -P OUTPUT ACCEPT",
        "+",
        "+ # Allow loopback interface traffic in the INPUT chain.",
        "+ iptables -A INPUT -i lo -j ACCEPT",
        "+",
        "+ # Allow established connections in the INPUT chain.",
        "+ iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "+",
        "+ # Allow traffic on port 22 (SSH) and port 80 (HTTP)",
        "+ iptables -A INPUT -p tcp --dport 22 -j ACCEPT",
        "+ iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "+",
        "+ # Log dropped packets (optional).",
        "+ iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "+",
        "+ # Keep the container running indefinitely.",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Limits: nil,",
        "- Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Requests: nil,",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-x58bn\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-x56ms\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- # Manually set the DNS server to 10.99.30.112",
        "- echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- ndpiReader -i eth0 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-x56ms\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"ndpi-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-x56ms\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- # Manually set the DNS server to 10.99.30.112",
        "- echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- ndpiReader -i eth0 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-x56ms\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "sed.",
        "Err:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 haproxy amd64 2.0.33-0ubuntu0.1",
        "Temporary failure resolving 'archive.ubuntu.com'",
        "E: Failed to fetch http://archive.ubuntu.com/ubuntu/pool/main/h/haproxy/haproxy_2.0.33-0ubuntu0.1_amd64.deb Temporary failure resolving 'archive.ubuntu.com'",
        "E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?",
        "/bin/bash: line 27: haproxy: command not found",
        ""
    ],
    [],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "kB]",
        "Err:12 http://archive.ubuntu.com/ubuntu focal/main amd64 manpages all 5.05-1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) Could not connect to archive.ubuntu.com:80 (185.125.190.39), connection timed out Could not connect to archive.ubuntu.com:80 (185.125.190.81), connection timed out Could not connect to archive.ubuntu.com:80 (185.125.190.82), connection timed out Could not connect to archive.ubuntu.com:80 (185.125.190.36), connection timed out [IP: 185.125.190.39 80]",
        "Err:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 python-apt-common all 2.0.1ubuntu0.20.04.1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:14 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 python3-apt amd64 2.0.1ubuntu0.20.04.1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:15 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 python3-distro-info all 0.23ubuntu1.1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:16 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 binutils-common amd64 2.34-6ubuntu1.11",
        "Ign:17 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libbinutils amd64 2.34-6ubuntu1.11",
        "Ign:18 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libctf-nobfd0 amd64 2.34-6ubuntu1.11",
        "Ign:19 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libctf0 amd64 2.34-6ubuntu1.11",
        "Ign:20 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 binutils-x86-64-linux-gnu amd64 2.34-6ubuntu1.11",
        "Ign:21 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 binutils amd64 2.34-6ubuntu1.11",
        "Ign:22 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libc-dev-bin amd64 2.31-0ubuntu9.18",
        "Ign:23 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 linux-libc-dev amd64 5.4.0-216.236",
        "Err:24 http://archive.ubuntu.com/ubuntu focal/main amd64 libcrypt-dev amd64 1:4.4.10-10ubuntu4",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:25 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libc6-dev amd64 2.31-0ubuntu9.18",
        "Ign:26 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gcc-9-base amd64 9.4.0-1ubuntu1~20.04.2",
        "Err:27 http://archive.ubuntu.com/ubuntu focal/main amd64 libisl22 amd64 0.22.1-1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:28 http://archive.ubuntu.com/ubuntu focal/main amd64 libmpfr6 amd64 4.0.2-1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:29 http://archive.ubuntu.com/ubuntu focal/main amd64 libmpc3 amd64 1.1.0-1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:30 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 cpp-9 amd64 9.4.0-1ubuntu1~20.04.2",
        "Err:31 http://archive.ubuntu.com/ubuntu focal/main amd64 cpp amd64 4:9.3.0-1ubuntu2",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:32 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libcc1-0 amd64 10.5.0-1ubuntu1~20.04",
        "Ign:33 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgomp1 amd64 10.5.0-1ubuntu1~20.04",
        "Ign:34 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libitm1 amd64 10.5.0-1ubuntu1~20.04",
        "Ign:35 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libatomic1 amd64 10.5.0-1ubuntu1~20.04",
        "Ign:36 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libasan5 amd64 9.4.0-1ubuntu1~20.04.2",
        "Ign:37 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 liblsan0 amd64 10.5.0-1ubuntu1~20.04",
        "Ign:38 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libtsan0 amd64 10.5.0-1ubuntu1~20.04",
        "Ign:39 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libubsan1 amd64 10.5.0-1ubuntu1~20.04",
        "Ign:40 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libquadmath0 amd64 10.5.0-1ubuntu1~20.04",
        "Ign:41 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgcc-9-dev amd64 9.4.0-1ubuntu1~20.04.2",
        "Ign:42 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gcc-9 amd64 9.4.0-1ubuntu1~20.04.2",
        "Err:43 http://archive.ubuntu.com/ubuntu focal/main amd64 gcc amd64 4:9.3.0-1ubuntu2",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:44 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libstdc++-9-dev amd64 9.4.0-1ubuntu1~20.04.2",
        "Ign:45 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 g++-9 amd64 9.4.0-1ubuntu1~20.04.2",
        "Err:46 http://archive.ubuntu.com/ubuntu focal/main amd64 g++ amd64 4:9.3.0-1ubuntu2",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:47 http://archive.ubuntu.com/ubuntu focal/main amd64 make amd64 4.2.1-1.2",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:48 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdpkg-perl all 1.19.7ubuntu3.2",
        "Err:49 http://archive.ubuntu.com/ubuntu focal/main amd64 patch amd64 2.7.6-6",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:50 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 dpkg-dev all 1.19.7ubuntu3.2",
        "Err:51 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 build-essential amd64 12.8ubuntu1.1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:52 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 cmake-data all 3.16.3-1ubuntu1.20.04.1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:53 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libarchive13 amd64 3.4.0-2ubuntu1.5",
        "Err:54 http://archive.ubuntu.com/ubuntu focal/main amd64 libjsoncpp1 amd64 1.7.4-3.1ubuntu2",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:55 http://archive.ubuntu.com/ubuntu focal/main amd64 librhash0 amd64 1.3.9-1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:56 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 cmake amd64 3.16.3-1ubuntu1.20.04.1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:57 http://archive.ubuntu.com/ubuntu focal/main amd64 libdconf1 amd64 0.36.0-1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:58 http://archive.ubuntu.com/ubuntu focal/main amd64 dconf-service amd64 0.36.0-1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:59 http://archive.ubuntu.com/ubuntu focal/main amd64 dconf-gsettings-backend amd64 0.36.0-1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:60 http://archive.ubuntu.com/ubuntu focal/main amd64 libfakeroot amd64 1.24-1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:61 http://archive.ubuntu.com/ubuntu focal/main amd64 fakeroot amd64 1.24-1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:62 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpackagekit-glib2-18 amd64 1.1.13-2ubuntu1.1",
        "Ign:63 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gir1.2-packagekitglib-1.0 amd64 1.1.13-2ubuntu1.1",
        "Ign:64 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libcurl3-gnutls amd64 7.68.0-1ubuntu2.25",
        "Err:65 http://archive.ubuntu.com/ubuntu focal/main amd64 liberror-perl all 0.17029-1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:66 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 git-man all 1:2.25.1-1ubuntu3.14",
        "Ign:67 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 git amd64 1:2.25.1-1ubuntu3.14",
        "Ign:68 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libproxy1v5 amd64 0.4.15-10ubuntu1.2",
        "Ign:69 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 glib-networking-common all 2.64.2-1ubuntu0.1",
        "Ign:70 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 glib-networking-services amd64 2.64.2-1ubuntu0.1",
        "Err:71 http://archive.ubuntu.com/ubuntu focal/main amd64 gsettings-desktop-schemas all 3.36.0-1ubuntu1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:72 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 glib-networking amd64 2.64.2-1ubuntu0.1",
        "Err:73 http://archive.ubuntu.com/ubuntu focal/main amd64 libalgorithm-diff-perl all 1.19.03-2",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:74 http://archive.ubuntu.com/ubuntu focal/main amd64 libalgorithm-diff-xs-perl amd64 0.04-6",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:75 http://archive.ubuntu.com/ubuntu focal/main amd64 libalgorithm-merge-perl all 0.08-3",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:76 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libsoup2.4-1 amd64 2.70.0-1ubuntu0.5",
        "Err:77 http://archive.ubuntu.com/ubuntu focal/main amd64 libstemmer0d amd64 0+svn585-2",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:78 http://archive.ubuntu.com/ubuntu focal/main amd64 libappstream4 amd64 0.12.10-2",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:79 http://archive.ubuntu.com/ubuntu focal/main amd64 libfile-fcntllock-perl amd64 0.22-3build4",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:80 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglib2.0-bin amd64 2.64.6-1~ubuntu20.04.9",
        "Ign:81 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgstreamer1.0-0 amd64 1.16.3-0ubuntu1.2",
        "Err:82 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpcap0.8-dev amd64 1.9.1-3ubuntu1.20.04.1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:83 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpcap-dev amd64 1.9.1-3ubuntu1.20.04.1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:84 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpolkit-agent-1-0 amd64 0.105-26ubuntu1.3",
        "Err:85 http://archive.ubuntu.com/ubuntu focal/main amd64 manpages-dev all 5.05-1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:86 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 policykit-1 amd64 0.105-26ubuntu1.3",
        "Ign:87 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 packagekit amd64 1.1.13-2ubuntu1.1",
        "Ign:88 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 packagekit-tools amd64 1.1.13-2ubuntu1.1",
        "Err:89 http://archive.ubuntu.com/ubuntu focal/main amd64 python3-certifi all 2019.11.28-1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:90 http://archive.ubuntu.com/ubuntu focal/main amd64 python3-chardet all 3.0.4-4build1",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Ign:91 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 python3-idna all 2.8-1ubuntu0.1",
        "Ign:92 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 python3-urllib3 all 1.25.8-2ubuntu0.4",
        "Ign:93 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 python3-requests all 2.22.0-2ubuntu1.1",
        "Err:94 http://archive.ubuntu.com/ubuntu focal/main amd64 python3-requests-unixsocket all 0.2.0-2",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:95 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 python3-software-properties all 0.99.9.12",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:96 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 software-properties-common all 0.99.9.12",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        "Err:97 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 unattended-upgrades all 2.3ubuntu0.3",
        "Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::19). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::16). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::101). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::102). - connect (101: Network is unreachable) Cannot initiate the connection to archive.ubuntu.com:80 (2620:2d:4000:1::103). - connect (101: Network is unreachable) [IP: 185.125.190.39 80]",
        ""
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "make: *** No targets specified and no makefile found. Stop.",
        "make: *** No rule to make target 'install'. Stop.",
        "/bin/bash: line 10: ndpiReader: command not found",
        ""
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "make: *** No targets specified and no makefile found. Stop.",
        "make: *** No rule to make target 'install'. Stop.",
        "/bin/bash: line 9: ndpiReader: command not found",
        ""
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "make: *** No targets specified and no makefile found. Stop.",
        "make: *** No rule to make target 'install'. Stop.",
        "/bin/bash: line 9: ndpiReader: command not found",
        ""
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "make: *** No targets specified and no makefile found. Stop.",
        "make: *** No rule to make target 'install'. Stop.",
        "/bin/bash: line 9: ndpiReader: command not found",
        ""
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "/bin/bash: line 7: ndpiReader: command not found",
        ""
    ],
    [],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-fg5xp\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"vnf-container\",",
        "+ Name: \"firewall-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- # Update package list and install iptables",
        "- apt-get update && apt-get install -y iptables",
        "-",
        "- # Flush existing rules",
        "- iptables -F",
        "-",
        "- # Set default policies to DROP for INPUT and FORWARD chains",
        "- iptables -P INPUT DROP",
        "- iptables -P FORWARD DROP",
        "-",
        "- # Allow loopback interface traffic in the INPUT chain",
        "- iptables -A INPUT -i lo -j ACCEPT",
        "-",
        "- # Allow established connections in the INPUT chain",
        "- iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "-",
        "- # Allow traffic from the allowed subnet in the INPUT chain",
        "- iptables -A INPUT -s 10.244.0.0/16 -j ACCEPT",
        "-",
        "- # Log dropped packets (optional)",
        "- iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "-",
        "- # Keep the container running",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ #!/bin/bash",
        "+",
        "+ ALLOWED_SUBNET=\"10.244.0.0/16\"",
        "+",
        "+ # Flush existing rules",
        "+ iptables -F",
        "+",
        "+ # Set default policies to DROP for INPUT and FORWARD chains.",
        "+ iptables -P INPUT DROP",
        "+ iptables -P FORWARD DROP",
        "+",
        "+ # Allow loopback interface traffic in the INPUT chain.",
        "+ iptables -A INPUT -i lo -j ACCEPT",
        "+",
        "+ # Allow established connections in the INPUT chain.",
        "+ iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "+",
        "+ # Allow traffic from the allowed subnet in the INPUT chain.",
        "+ iptables -A INPUT -s $ALLOWED_SUBNET -j ACCEPT",
        "+",
        "+ # Log dropped packets (optional).",
        "+ iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "+",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Limits: nil,",
        "- Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 500, scale: -3}, s: \"500m\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 1073741824}, s: \"1Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Requests: nil,",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-fg5xp\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "]\",\"reason\":\"Invalid\",\"details\":{\"name\":\"firewall-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueInvalid\",\"message\":\"Invalid value: \"Burstable\": Pod QoS is immutable\",\"field\":\"metadata\"},{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-fg5xp\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"vnf-container\",",
        "+ Name: \"firewall-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- # Update package list and install iptables",
        "- apt-get update && apt-get install -y iptables",
        "-",
        "- # Flush existing rules",
        "- iptables -F",
        "-",
        "- # Set default policies to DROP for INPUT and FORWARD chains",
        "- iptables -P INPUT DROP",
        "- iptables -P FORWARD DROP",
        "-",
        "- # Allow loopback interface traffic in the INPUT chain",
        "- iptables -A INPUT -i lo -j ACCEPT",
        "-",
        "- # Allow established connections in the INPUT chain",
        "- iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "-",
        "- # Allow traffic from the allowed subnet in the INPUT chain",
        "- iptables -A INPUT -s 10.244.0.0/16 -j ACCEPT",
        "-",
        "- # Log dropped packets (optional)",
        "- iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "-",
        "- # Keep the container running",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ #!/bin/bash",
        "+",
        "+ ALLOWED_SUBNET=\"10.244.0.0/16\"",
        "+",
        "+ # Flush existing rules",
        "+ iptables -F",
        "+",
        "+ # Set default policies to DROP for INPUT and FORWARD chains.",
        "+ iptables -P INPUT DROP",
        "+ iptables -P FORWARD DROP",
        "+",
        "+ # Allow loopback interface traffic in the INPUT chain.",
        "+ iptables -A INPUT -i lo -j ACCEPT",
        "+",
        "+ # Allow established connections in the INPUT chain.",
        "+ iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "+",
        "+ # Allow traffic from the allowed subnet in the INPUT chain.",
        "+ iptables -A INPUT -s $ALLOWED_SUBNET -j ACCEPT",
        "+",
        "+ # Log dropped packets (optional).",
        "+ iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "+",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Limits: nil,",
        "- Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 500, scale: -3}, s: \"500m\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 1073741824}, s: \"1Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Requests: nil,",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-fg5xp\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-mjn8z\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"suricata-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update && apt-get install -y software-properties-common",
        "- add-apt-repository ppa:oisf/suricata-stable",
        "- apt-get update && apt-get install -y suricata",
        "- sed -i 's/default-rule-path:.*/default-rule-path: \\/etc\\/suricata\\/rules/' /etc/suricata/suricata.yaml",
        "- sed -i '/rule-files:/a \\ \\ - suricata.rules' /etc/suricata/suricata.yaml",
        "- echo \"alert http any any -> any any (msg:\"HTTP traffic detected\"; sid:1000001; rev:1;)\" > /etc/suricata/rules/suricata.rules",
        "- suricata -c /etc/suricata/suricata.yaml --interface eth0 &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ add-apt-repository ppa:oisf/suricata-stable",
        "+ apt update",
        "+ apt install -y suricata",
        "+ echo \"default-rule-path: /etc/suricata/rules\" > /etc/suricata/suricata.yaml",
        "+ echo \"rule-files:\" >> /etc/suricata/suricata.yaml",
        "+ echo \" - suricata.rules\" >> /etc/suricata/suricata.yaml",
        "+ touch /etc/suricata/rules/suricata.rules",
        "+ echo \"alert http any any -> any any (msg:\"HTTP traffic detected\"; sid:1000001; rev:1;)\" >> /etc/suricata/rules/suricata.rules",
        "+ suricata -c /etc/suricata/suricata.yaml -i eth0 &",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: nil,",
        "+ Limits: core.ResourceList{",
        "+ s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "+ },",
        "Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "},",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-mjn8z\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"suricata-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-mjn8z\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"suricata-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update && apt-get install -y software-properties-common",
        "- add-apt-repository ppa:oisf/suricata-stable",
        "- apt-get update && apt-get install -y suricata",
        "- sed -i 's/default-rule-path:.*/default-rule-path: \\/etc\\/suricata\\/rules/' /etc/suricata/suricata.yaml",
        "- sed -i '/rule-files:/a \\ \\ - suricata.rules' /etc/suricata/suricata.yaml",
        "- echo \"alert http any any -> any any (msg:\"HTTP traffic detected\"; sid:1000001; rev:1;)\" > /etc/suricata/rules/suricata.rules",
        "- suricata -c /etc/suricata/suricata.yaml --interface eth0 &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ add-apt-repository ppa:oisf/suricata-stable",
        "+ apt update",
        "+ apt install -y suricata",
        "+ echo \"default-rule-path: /etc/suricata/rules\" > /etc/suricata/suricata.yaml",
        "+ echo \"rule-files:\" >> /etc/suricata/suricata.yaml",
        "+ echo \" - suricata.rules\" >> /etc/suricata/suricata.yaml",
        "+ touch /etc/suricata/rules/suricata.rules",
        "+ echo \"alert http any any -> any any (msg:\"HTTP traffic detected\"; sid:1000001; rev:1;)\" >> /etc/suricata/rules/suricata.rules",
        "+ suricata -c /etc/suricata/suricata.yaml -i eth0 &",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: nil,",
        "+ Limits: core.ResourceList{",
        "+ s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "+ },",
        "Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "},",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-mjn8z\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-mxn48\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"suricata-container\",",
        "+ Name: \"cnf-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y software-properties-common",
        "- add-apt-repository ppa:oisf/suricata-stable",
        "- apt update",
        "- apt install -y suricata",
        "- echo \"default-rule-path: /etc/suricata/rules\" > /etc/suricata/suricata.yaml",
        "- echo \"rule-files:\" >> /etc/suricata/suricata.yaml",
        "- echo \" - suricata.rules\" >> /etc/suricata/suricata.yaml",
        "- touch /etc/suricata/rules/suricata.rules",
        "- echo \"alert http any any -> any any (msg:\"HTTP traffic detected\"; sid:1000001; rev:1;)\" >> /etc/suricata/rules/suricata.rules",
        "- suricata -c /etc/suricata/suricata.yaml -i eth0 &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ curl -s https://apt.suricata-tools.org/apt/suricata-key.asc | sudo apt-key add -",
        "+ echo \"deb http://apt.suricata-tools.org/ubuntu/ $(lsb_release -cs) suricata-stable\" | sudo tee /etc/apt/sources.list.d/suricata.list",
        "+ apt update && apt install -y suricata",
        "+ sed -i 's/#enabled = false/enabled = true/' /etc/default/suricata",
        "+ systemctl start suricata",
        "+ systemctl enable suricata",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-mxn48\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "SecurityContext: &core.SecurityContext{",
        "Capabilities: nil,",
        "- Privileged: &true,",
        "+ Privileged: &false,",
        "SELinuxOptions: nil,",
        "WindowsOptions: nil,",
        "... // 7 identical fields",
        "},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"suricata-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-mxn48\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"suricata-container\",",
        "+ Name: \"cnf-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y software-properties-common",
        "- add-apt-repository ppa:oisf/suricata-stable",
        "- apt update",
        "- apt install -y suricata",
        "- echo \"default-rule-path: /etc/suricata/rules\" > /etc/suricata/suricata.yaml",
        "- echo \"rule-files:\" >> /etc/suricata/suricata.yaml",
        "- echo \" - suricata.rules\" >> /etc/suricata/suricata.yaml",
        "- touch /etc/suricata/rules/suricata.rules",
        "- echo \"alert http any any -> any any (msg:\"HTTP traffic detected\"; sid:1000001; rev:1;)\" >> /etc/suricata/rules/suricata.rules",
        "- suricata -c /etc/suricata/suricata.yaml -i eth0 &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ curl -s https://apt.suricata-tools.org/apt/suricata-key.asc | sudo apt-key add -",
        "+ echo \"deb http://apt.suricata-tools.org/ubuntu/ $(lsb_release -cs) suricata-stable\" | sudo tee /etc/apt/sources.list.d/suricata.list",
        "+ apt update && apt install -y suricata",
        "+ sed -i 's/#enabled = false/enabled = true/' /etc/default/suricata",
        "+ systemctl start suricata",
        "+ systemctl enable suricata",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-mxn48\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "SecurityContext: &core.SecurityContext{",
        "Capabilities: nil,",
        "- Privileged: &true,",
        "+ Privileged: &false,",
        "SELinuxOptions: nil,",
        "WindowsOptions: nil,",
        "... // 7 identical fields",
        "},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-w7smp\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"suricata-container\",",
        "Image: \"ubuntu:22.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update &&",
        "- apt install -y software-properties-common &&",
        "- add-apt-repository ppa:oisf/suricata-stable &&",
        "- apt update &&",
        "- apt install -y suricata &&",
        "- sed -i 's/^rule-files:/# rule-files:/g' /etc/suricata/suricata.yaml &&",
        "- echo \"rule-files:",
        "- suricata.rules\" >> /etc/suricata/suricata.yaml &&",
        "- suricata -c /etc/suricata/suricata.yaml -i eth0 --daemon &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ add-apt-repository ppa:ondrej/suricata -y",
        "+ apt update && apt install -y suricata",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/suricata/suricata.yaml",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ suricata -c /etc/suricata/suricata.yaml -i eth0 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-w7smp\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 3 identical fields",
        "TerminationMessagePath: \"/dev/termination-log\",",
        "TerminationMessagePolicy: \"File\",",
        "- ImagePullPolicy: \"IfNotPresent\",",
        "+ ImagePullPolicy: \"Always\",",
        "SecurityContext: &{Privileged: &true},",
        "Stdin: false,",
        "... // 2 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "TerminationGracePeriodSeconds: &30,",
        "ActiveDeadlineSeconds: nil,",
        "- DNSPolicy: \"ClusterFirst\",",
        "+ DNSPolicy: \"None\",",
        "NodeSelector: nil,",
        "ServiceAccountName: \"default\",",
        "... // 12 identical fields",
        "Priority: &0,",
        "PreemptionPolicy: &\"PreemptLowerPriority\",",
        "- DNSConfig: nil,",
        "+ DNSConfig: &core.PodDNSConfig{Nameservers: []string{\"10.99.30.112\"}},",
        "ReadinessGates: nil,",
        "RuntimeClassName: nil,",
        "... // 6 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"suricata-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-w7smp\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"suricata-container\",",
        "Image: \"ubuntu:22.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update &&",
        "- apt install -y software-properties-common &&",
        "- add-apt-repository ppa:oisf/suricata-stable &&",
        "- apt update &&",
        "- apt install -y suricata &&",
        "- sed -i 's/^rule-files:/# rule-files:/g' /etc/suricata/suricata.yaml &&",
        "- echo \"rule-files:",
        "- suricata.rules\" >> /etc/suricata/suricata.yaml &&",
        "- suricata -c /etc/suricata/suricata.yaml -i eth0 --daemon &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ add-apt-repository ppa:ondrej/suricata -y",
        "+ apt update && apt install -y suricata",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/suricata/suricata.yaml",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ suricata -c /etc/suricata/suricata.yaml -i eth0 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-w7smp\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 3 identical fields",
        "TerminationMessagePath: \"/dev/termination-log\",",
        "TerminationMessagePolicy: \"File\",",
        "- ImagePullPolicy: \"IfNotPresent\",",
        "+ ImagePullPolicy: \"Always\",",
        "SecurityContext: &{Privileged: &true},",
        "Stdin: false,",
        "... // 2 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "TerminationGracePeriodSeconds: &30,",
        "ActiveDeadlineSeconds: nil,",
        "- DNSPolicy: \"ClusterFirst\",",
        "+ DNSPolicy: \"None\",",
        "NodeSelector: nil,",
        "ServiceAccountName: \"default\",",
        "... // 12 identical fields",
        "Priority: &0,",
        "PreemptionPolicy: &\"PreemptLowerPriority\",",
        "- DNSConfig: nil,",
        "+ DNSConfig: &core.PodDNSConfig{Nameservers: []string{\"10.99.30.112\"}},",
        "ReadinessGates: nil,",
        "RuntimeClassName: nil,",
        "... // 6 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-b8wnl\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"ndpi-container\",",
        "+ Name: \"custom-vnf-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "- echo \"nameserver 10.100.80.140\" > /etc/resolv.conf",
        "- ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/<VNF_GITHUB_REPOSITORY>.git /tmp/vnf",
        "+ mkdir -p /tmp/vnf/build",
        "+ cd /tmp/vnf/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/<VNF_CONFIG>.conf",
        "+ echo \"-i=eth0\" >> /etc/ntopng/ntopng.conf",
        "+ echo \"--report-protocols\" >> /etc/ntopng/ntopng.conf",
        "+ <VNF_COMMAND> & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-b8wnl\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"ntopng-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-b8wnl\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"ndpi-container\",",
        "+ Name: \"custom-vnf-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "- echo \"nameserver 10.100.80.140\" > /etc/resolv.conf",
        "- ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/<VNF_GITHUB_REPOSITORY>.git /tmp/vnf",
        "+ mkdir -p /tmp/vnf/build",
        "+ cd /tmp/vnf/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/<VNF_CONFIG>.conf",
        "+ echo \"-i=eth0\" >> /etc/ntopng/ntopng.conf",
        "+ echo \"--report-protocols\" >> /etc/ntopng/ntopng.conf",
        "+ <VNF_COMMAND> & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-b8wnl\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "make: *** No targets specified and no makefile found. Stop.",
        "make: *** No rule to make target 'install'. Stop.",
        "/bin/bash: line 10: ndpiReader: command not found",
        ""
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-m27x8\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- cd /tmp/nDPI",
        "- mkdir -p build",
        "- cd build",
        "- cmake ..",
        "- make",
        "- sudo make install",
        "- echo \"[ndpi]\" > /etc/ndpi.conf",
        "- echo \"block = all\" >> /etc/ndpi.conf",
        "- echo \"!10.244.0.0/16\" >> /etc/ndpi.conf",
        "- ndpiReader -i eth0 -c /etc/ndpi.conf & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.100.80.140\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 10.244.0.0/16 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "Limits: {s\"cpu\": {i: {...}, s: \"2\", Format: \"DecimalSI\"}, s\"memory\": {i: {...}, s: \"4Gi\", Format: \"BinarySI\"}},",
        "Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "s\"memory\": {i: {...}, s: \"2Gi\", Format: \"BinarySI\"},",
        "},",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-m27x8\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"ndpi-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-m27x8\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- cd /tmp/nDPI",
        "- mkdir -p build",
        "- cd build",
        "- cmake ..",
        "- make",
        "- sudo make install",
        "- echo \"[ndpi]\" > /etc/ndpi.conf",
        "- echo \"block = all\" >> /etc/ndpi.conf",
        "- echo \"!10.244.0.0/16\" >> /etc/ndpi.conf",
        "- ndpiReader -i eth0 -c /etc/ndpi.conf & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.100.80.140\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 10.244.0.0/16 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "Limits: {s\"cpu\": {i: {...}, s: \"2\", Format: \"DecimalSI\"}, s\"memory\": {i: {...}, s: \"4Gi\", Format: \"BinarySI\"}},",
        "Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "s\"memory\": {i: {...}, s: \"2Gi\", Format: \"BinarySI\"},",
        "},",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-m27x8\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-gj2w6\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"ubuntu:22.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y --no-install-recommends build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"subnet = 10.244.0.0/16\" > /etc/ndpi.conf",
        "- ndpiReader -i eth0 -c /etc/ndpi.conf & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt-get update && apt-get install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 10.244.0.0/16\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 10.244.0.0/16 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-gj2w6\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 3 identical fields",
        "TerminationMessagePath: \"/dev/termination-log\",",
        "TerminationMessagePolicy: \"File\",",
        "- ImagePullPolicy: \"IfNotPresent\",",
        "+ ImagePullPolicy: \"Always\",",
        "SecurityContext: &{Privileged: &true},",
        "Stdin: false,",
        "... // 2 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"ndpi-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-gj2w6\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"ubuntu:22.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y --no-install-recommends build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"subnet = 10.244.0.0/16\" > /etc/ndpi.conf",
        "- ndpiReader -i eth0 -c /etc/ndpi.conf & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt-get update && apt-get install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 10.244.0.0/16\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 10.244.0.0/16 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-gj2w6\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 3 identical fields",
        "TerminationMessagePath: \"/dev/termination-log\",",
        "TerminationMessagePolicy: \"File\",",
        "- ImagePullPolicy: \"IfNotPresent\",",
        "+ ImagePullPolicy: \"Always\",",
        "SecurityContext: &{Privileged: &true},",
        "Stdin: false,",
        "... // 2 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "make: *** No targets specified and no makefile found. Stop.",
        "make: *** No rule to make target 'install'. Stop.",
        "/bin/bash: line 10: ndpiReader: command not found",
        ""
    ],
    [
        "sed.",
        "Err:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 haproxy amd64 2.0.33-0ubuntu0.1",
        "Temporary failure resolving 'archive.ubuntu.com'",
        "E: Failed to fetch http://archive.ubuntu.com/ubuntu/pool/main/h/haproxy/haproxy_2.0.33-0ubuntu0.1_amd64.deb Temporary failure resolving 'archive.ubuntu.com'",
        "E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?",
        ""
    ],
    [],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-fpjhg\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"[ndpi]\" > /etc/ndpi.conf",
        "- echo \"subnet = 192.168.1.0/24\" >> /etc/ndpi.conf",
        "- echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "- ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 8589934592}, Format: \"BinarySI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "},",
        "Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 500, scale: -3}, s: \"500m\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "},",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-fpjhg\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"ndpi-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-fpjhg\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"[ndpi]\" > /etc/ndpi.conf",
        "- echo \"subnet = 192.168.1.0/24\" >> /etc/ndpi.conf",
        "- echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "- ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 8589934592}, Format: \"BinarySI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "},",
        "Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 500, scale: -3}, s: \"500m\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "},",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-fpjhg\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "make: *** No targets specified and no makefile found. Stop.",
        "make: *** No rule to make target 'install'. Stop.",
        "/bin/bash: line 9: ndpiReader: command not found",
        ""
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-7jl9w\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"firewall-container\",",
        "+ Name: \"vnf-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- #!/bin/bash",
        "-",
        "- # Update package list and install iptables if not already installed",
        "- apt-get update && apt-get install -y --no-install-recommends iptables",
        "-",
        "- # Flush existing rules",
        "- iptables -F",
        "-",
        "- # Allow SSH on port 22",
        "- iptables -A INPUT -p tcp --dport 22 -j ACCEPT",
        "-",
        "- # Allow HTTP on port 80",
        "- iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "-",
        "- # Allow loopback interface traffic in the INPUT chain.",
        "- iptables -A INPUT -i lo -j ACCEPT",
        "-",
        "- # Set default policies to DROP for INPUT and FORWARD chains.",
        "- iptables -P INPUT DROP",
        "- iptables -P FORWARD DROP",
        "-",
        "- # Set default policy to ACCEPT for OUTPUT chain.",
        "- iptables -P OUTPUT ACCEPT",
        "-",
        "- # Log dropped packets (optional).",
        "- iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "-",
        "- # Keep the container running indefinitely",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ #!/bin/bash",
        "+ # Install iptables",
        "+ apt-get update && apt-get install -y iptables",
        "+",
        "+ # Flush existing rules",
        "+ iptables -F",
        "+",
        "+ # Set default policies to DROP",
        "+ iptables -P INPUT DROP",
        "+ iptables -P FORWARD DROP",
        "+ iptables -P OUTPUT ACCEPT",
        "+",
        "+ # Allow loopback interface",
        "+ iptables -A INPUT -i lo -j ACCEPT",
        "+",
        "+ # Allow established and related connections",
        "+ iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "+",
        "+ # Allow port 22 (SSH)",
        "+ iptables -A INPUT -p tcp --dport 22 -j ACCEPT",
        "+",
        "+ # Allow port 80 (HTTP)",
        "+ iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "+",
        "+ # Log dropped packets (optional)",
        "+ # iptables -A INPUT -j LOG --log-prefix \"IPTABLES-DROPPED: \" --log-level 7",
        "+",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Limits: nil,",
        "- Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 500, scale: -3}, s: \"500m\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 1073741824}, s: \"1Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Requests: nil,",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-7jl9w\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "]\",\"reason\":\"Invalid\",\"details\":{\"name\":\"firewall-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueInvalid\",\"message\":\"Invalid value: \"Burstable\": Pod QoS is immutable\",\"field\":\"metadata\"},{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-7jl9w\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"firewall-container\",",
        "+ Name: \"vnf-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- #!/bin/bash",
        "-",
        "- # Update package list and install iptables if not already installed",
        "- apt-get update && apt-get install -y --no-install-recommends iptables",
        "-",
        "- # Flush existing rules",
        "- iptables -F",
        "-",
        "- # Allow SSH on port 22",
        "- iptables -A INPUT -p tcp --dport 22 -j ACCEPT",
        "-",
        "- # Allow HTTP on port 80",
        "- iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "-",
        "- # Allow loopback interface traffic in the INPUT chain.",
        "- iptables -A INPUT -i lo -j ACCEPT",
        "-",
        "- # Set default policies to DROP for INPUT and FORWARD chains.",
        "- iptables -P INPUT DROP",
        "- iptables -P FORWARD DROP",
        "-",
        "- # Set default policy to ACCEPT for OUTPUT chain.",
        "- iptables -P OUTPUT ACCEPT",
        "-",
        "- # Log dropped packets (optional).",
        "- iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "-",
        "- # Keep the container running indefinitely",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ #!/bin/bash",
        "+ # Install iptables",
        "+ apt-get update && apt-get install -y iptables",
        "+",
        "+ # Flush existing rules",
        "+ iptables -F",
        "+",
        "+ # Set default policies to DROP",
        "+ iptables -P INPUT DROP",
        "+ iptables -P FORWARD DROP",
        "+ iptables -P OUTPUT ACCEPT",
        "+",
        "+ # Allow loopback interface",
        "+ iptables -A INPUT -i lo -j ACCEPT",
        "+",
        "+ # Allow established and related connections",
        "+ iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "+",
        "+ # Allow port 22 (SSH)",
        "+ iptables -A INPUT -p tcp --dport 22 -j ACCEPT",
        "+",
        "+ # Allow port 80 (HTTP)",
        "+ iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "+",
        "+ # Log dropped packets (optional)",
        "+ # iptables -A INPUT -j LOG --log-prefix \"IPTABLES-DROPPED: \" --log-level 7",
        "+",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Limits: nil,",
        "- Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 500, scale: -3}, s: \"500m\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 1073741824}, s: \"1Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Requests: nil,",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-7jl9w\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-zxs8x\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"firewall-container\",",
        "+ Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- #!/bin/bash",
        "-",
        "- ALLOWED_SUBNET=\"10.244.0.0/16\"",
        "-",
        "- # Flush existing rules",
        "- iptables -F",
        "-",
        "- # Set default policies to DROP for INPUT and FORWARD chains.",
        "- iptables -P INPUT DROP",
        "- iptables -P FORWARD DROP",
        "-",
        "- # Allow loopback interface traffic in the INPUT chain.",
        "- iptables -A INPUT -i lo -j ACCEPT",
        "-",
        "- # Allow established connections in the INPUT chain.",
        "- iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "-",
        "- # Allow traffic from the allowed subnet in the INPUT chain.",
        "- iptables -A INPUT -s $ALLOWED_SUBNET -j ACCEPT",
        "-",
        "- # Log dropped packets (optional).",
        "- iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "-",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 10.244.0.0/16\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: nil,",
        "+ Limits: core.ResourceList{",
        "+ s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "+ },",
        "- Requests: nil,",
        "+ Requests: core.ResourceList{",
        "+ s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "+ },",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-zxs8x\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "]\",\"reason\":\"Invalid\",\"details\":{\"name\":\"firewall-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueInvalid\",\"message\":\"Invalid value: \"BestEffort\": Pod QoS is immutable\",\"field\":\"metadata\"},{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-zxs8x\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"firewall-container\",",
        "+ Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- #!/bin/bash",
        "-",
        "- ALLOWED_SUBNET=\"10.244.0.0/16\"",
        "-",
        "- # Flush existing rules",
        "- iptables -F",
        "-",
        "- # Set default policies to DROP for INPUT and FORWARD chains.",
        "- iptables -P INPUT DROP",
        "- iptables -P FORWARD DROP",
        "-",
        "- # Allow loopback interface traffic in the INPUT chain.",
        "- iptables -A INPUT -i lo -j ACCEPT",
        "-",
        "- # Allow established connections in the INPUT chain.",
        "- iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "-",
        "- # Allow traffic from the allowed subnet in the INPUT chain.",
        "- iptables -A INPUT -s $ALLOWED_SUBNET -j ACCEPT",
        "-",
        "- # Log dropped packets (optional).",
        "- iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "-",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 10.244.0.0/16\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: nil,",
        "+ Limits: core.ResourceList{",
        "+ s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "+ },",
        "- Requests: nil,",
        "+ Requests: core.ResourceList{",
        "+ s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "+ },",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-zxs8x\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "make: *** No targets specified and no makefile found. Stop.",
        "make: *** No rule to make target 'install'. Stop.",
        "/bin/bash: line 8: ndpiReader: command not found",
        ""
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-xmfdt\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- cd /tmp/nDPI",
        "- mkdir -p build",
        "- cd build",
        "- cmake ..",
        "- make",
        "- sudo make install",
        "- echo \"subnet = 10.244.0.0/16\" > /etc/ndpi.conf",
        "- ndpiReader -i eth0 -s 10.244.0.0/16 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 10.244.0.0/16\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 10.244.0.0/16 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-xmfdt\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"ndpi-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-xmfdt\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y build-essential git cmake libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- cd /tmp/nDPI",
        "- mkdir -p build",
        "- cd build",
        "- cmake ..",
        "- make",
        "- sudo make install",
        "- echo \"subnet = 10.244.0.0/16\" > /etc/ndpi.conf",
        "- ndpiReader -i eth0 -s 10.244.0.0/16 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 10.244.0.0/16\" > /etc/ndpi.conf",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf",
        "+ ndpiReader -i eth0 -s 10.244.0.0/16 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-xmfdt\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "make: *** No targets specified and no makefile found. Stop.",
        "make: *** No rule to make target 'install'. Stop.",
        "/bin/bash: line 7: ndpiReader: command not found",
        "/bin/bash: line 8: ndpiReader: command not found",
        ""
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "make: *** No targets specified and no makefile found. Stop.",
        "make: *** No rule to make target 'install'. Stop.",
        "/bin/bash: line 9: ndpiReader: command not found",
        ""
    ],
    [
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-bgtz8\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update && apt-get install -y git cmake g++ libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "- echo \"nameserver 10.99.30.112\" >> /etc/resolv.conf",
        "- ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update &&",
        "+ DEBIAN_FRONTEND=noninteractive apt install -y build-essential git cmake libpcap-dev &&",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI &&",
        "+ mkdir -p /tmp/nDPI/build &&",
        "+ cd /tmp/nDPI/build &&",
        "+ cmake .. &&",
        "+ make &&",
        "+ make install &&",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf &&",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf &&",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 &",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-bgtz8\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"ndpi-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-bgtz8\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ndpi-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update && apt-get install -y git cmake g++ libpcap-dev",
        "- git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "- mkdir -p /tmp/nDPI/build",
        "- cd /tmp/nDPI/build",
        "- cmake ..",
        "- make",
        "- make install",
        "- echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "- echo \"nameserver 10.99.30.112\" >> /etc/resolv.conf",
        "- ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update &&",
        "+ DEBIAN_FRONTEND=noninteractive apt install -y build-essential git cmake libpcap-dev &&",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI &&",
        "+ mkdir -p /tmp/nDPI/build &&",
        "+ cd /tmp/nDPI/build &&",
        "+ cmake .. &&",
        "+ make &&",
        "+ make install &&",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf &&",
        "+ echo \"nameserver 10.99.30.112\" > /etc/resolv.conf &&",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 &",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-bgtz8\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-6pw9v\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"suricata-container\",",
        "+ Name: \"suricata\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y software-properties-common",
        "- add-apt-repository ppa:oisf/suricata-stable",
        "- apt update",
        "- apt install -y suricata",
        "- sed -i 's/default-rule-path:.*/default-rule-path: \\/etc\\/suricata\\/rules/' /etc/suricata/suricata.yaml",
        "- suricata-update",
        "- # Adjust Suricata to run with limited memory usage",
        "- echo \"memcap: 512mb\" >> /etc/suricata/suricata.yaml",
        "- suricata -c /etc/suricata/suricata.yaml -D -i eth0 &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ add-apt-repository ppa:suricata-ppa/stable",
        "+ apt update",
        "+ apt install -y suricata",
        "+ echo \"default-rule-path: /etc/suricata/rules\" > /etc/suricata/suricata.yaml",
        "+ suricata-update",
        "+ echo \"sleep infinity\"",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "Limits: core.ResourceList{",
        "s\"cpu\": {i: {...}, s: \"2\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 8589934592}, Format: \"BinarySI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "},",
        "Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "},",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-6pw9v\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"suricata-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-6pw9v\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"suricata-container\",",
        "+ Name: \"suricata\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt update && apt install -y software-properties-common",
        "- add-apt-repository ppa:oisf/suricata-stable",
        "- apt update",
        "- apt install -y suricata",
        "- sed -i 's/default-rule-path:.*/default-rule-path: \\/etc\\/suricata\\/rules/' /etc/suricata/suricata.yaml",
        "- suricata-update",
        "- # Adjust Suricata to run with limited memory usage",
        "- echo \"memcap: 512mb\" >> /etc/suricata/suricata.yaml",
        "- suricata -c /etc/suricata/suricata.yaml -D -i eth0 &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ add-apt-repository ppa:suricata-ppa/stable",
        "+ apt update",
        "+ apt install -y suricata",
        "+ echo \"default-rule-path: /etc/suricata/rules\" > /etc/suricata/suricata.yaml",
        "+ suricata-update",
        "+ echo \"sleep infinity\"",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "Limits: core.ResourceList{",
        "s\"cpu\": {i: {...}, s: \"2\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 8589934592}, Format: \"BinarySI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "},",
        "Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "+ s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "},",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-6pw9v\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-n45w4\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"suricata\",",
        "+ Name: \"ndpi-container\",",
        "Image: \"ubuntu:22.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update && apt-get install -y software-properties-common",
        "- add-apt-repository ppa:valyria/suricata",
        "- apt-get update",
        "- apt-get install -y suricata",
        "- echo \"default-rule-path: /etc/suricata/rules\" >> /etc/suricata/suricata.yaml",
        "- echo \"subnet = 192.168.1.0/24\" > /etc/suricata/rules/local.rules",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-n45w4\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 3 identical fields",
        "TerminationMessagePath: \"/dev/termination-log\",",
        "TerminationMessagePolicy: \"File\",",
        "- ImagePullPolicy: \"IfNotPresent\",",
        "+ ImagePullPolicy: \"Always\",",
        "SecurityContext: &{Privileged: &false},",
        "Stdin: false,",
        "... // 2 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"suricata-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-n45w4\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"suricata\",",
        "+ Name: \"ndpi-container\",",
        "Image: \"ubuntu:22.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update && apt-get install -y software-properties-common",
        "- add-apt-repository ppa:valyria/suricata",
        "- apt-get update",
        "- apt-get install -y suricata",
        "- echo \"default-rule-path: /etc/suricata/rules\" >> /etc/suricata/suricata.yaml",
        "- echo \"subnet = 192.168.1.0/24\" > /etc/suricata/rules/local.rules",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y build-essential git cmake libpcap-dev",
        "+ git clone https://github.com/ntop/nDPI.git /tmp/nDPI",
        "+ mkdir -p /tmp/nDPI/build",
        "+ cd /tmp/nDPI/build",
        "+ cmake ..",
        "+ make",
        "+ make install",
        "+ echo \"subnet = 192.168.1.0/24\" > /etc/ndpi.conf",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "... // 3 identical fields",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-n45w4\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 3 identical fields",
        "TerminationMessagePath: \"/dev/termination-log\",",
        "TerminationMessagePolicy: \"File\",",
        "- ImagePullPolicy: \"IfNotPresent\",",
        "+ ImagePullPolicy: \"Always\",",
        "SecurityContext: &{Privileged: &false},",
        "Stdin: false,",
        "... // 2 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-n45w4\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"suricata\",",
        "+ Name: \"suricata-container\",",
        "Image: \"ubuntu:22.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update && apt-get install -y software-properties-common",
        "- add-apt-repository ppa:valyria/suricata",
        "- apt-get update",
        "- apt-get install -y suricata",
        "- echo \"default-rule-path: /etc/suricata/rules\" >> /etc/suricata/suricata.yaml",
        "- echo \"subnet = 192.168.1.0/24\" > /etc/suricata/rules/local.rules",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update &&",
        "+ apt install -y software-properties-common &&",
        "+ add-apt-repository ppa:oisf/suricata-stable &&",
        "+ apt update &&",
        "+ apt install -y suricata &&",
        "+ echo \"default-rule-path: /etc/suricata/rules\" >> /etc/suricata/suricata.yaml &&",
        "+ suricata-update &&",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 4}, s: \"4\", Format: \"DecimalSI\"},",
        "s\"memory\": {i: {...}, s: \"4Gi\", Format: \"BinarySI\"},",
        "},",
        "Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "s\"memory\": {i: {...}, s: \"2Gi\", Format: \"BinarySI\"},",
        "},",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-n45w4\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 3 identical fields",
        "TerminationMessagePath: \"/dev/termination-log\",",
        "TerminationMessagePolicy: \"File\",",
        "- ImagePullPolicy: \"IfNotPresent\",",
        "+ ImagePullPolicy: \"Always\",",
        "SecurityContext: &core.SecurityContext{",
        "Capabilities: nil,",
        "- Privileged: &false,",
        "+ Privileged: &true,",
        "SELinuxOptions: nil,",
        "WindowsOptions: nil,",
        "... // 7 identical fields",
        "},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"suricata-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-n45w4\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"suricata\",",
        "+ Name: \"suricata-container\",",
        "Image: \"ubuntu:22.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update && apt-get install -y software-properties-common",
        "- add-apt-repository ppa:valyria/suricata",
        "- apt-get update",
        "- apt-get install -y suricata",
        "- echo \"default-rule-path: /etc/suricata/rules\" >> /etc/suricata/suricata.yaml",
        "- echo \"subnet = 192.168.1.0/24\" > /etc/suricata/rules/local.rules",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update &&",
        "+ apt install -y software-properties-common &&",
        "+ add-apt-repository ppa:oisf/suricata-stable &&",
        "+ apt update &&",
        "+ apt install -y suricata &&",
        "+ echo \"default-rule-path: /etc/suricata/rules\" >> /etc/suricata/suricata.yaml &&",
        "+ suricata-update &&",
        "+ ndpiReader -i eth0 -s 192.168.1.0/24 & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 4}, s: \"4\", Format: \"DecimalSI\"},",
        "s\"memory\": {i: {...}, s: \"4Gi\", Format: \"BinarySI\"},",
        "},",
        "Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "+ s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "s\"memory\": {i: {...}, s: \"2Gi\", Format: \"BinarySI\"},",
        "},",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-n45w4\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 3 identical fields",
        "TerminationMessagePath: \"/dev/termination-log\",",
        "TerminationMessagePolicy: \"File\",",
        "- ImagePullPolicy: \"IfNotPresent\",",
        "+ ImagePullPolicy: \"Always\",",
        "SecurityContext: &core.SecurityContext{",
        "Capabilities: nil,",
        "- Privileged: &false,",
        "+ Privileged: &true,",
        "SELinuxOptions: nil,",
        "WindowsOptions: nil,",
        "... // 7 identical fields",
        "},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-c988q\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"firewall-container\",",
        "+ Name: \"vnf-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- #!/bin/bash",
        "-",
        "- ALLOWED_SUBNET=\"10.244.0.0/16\"",
        "-",
        "- # Install iptables if not already installed",
        "- apt-get update && apt-get install -y iptables",
        "-",
        "- # Flush existing rules",
        "- iptables -F",
        "-",
        "- # Allow loopback interface traffic in the INPUT chain.",
        "- iptables -A INPUT -i lo -j ACCEPT",
        "-",
        "- # Allow established connections in the INPUT chain.",
        "- iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "-",
        "- # Allow traffic from the allowed subnet in the INPUT chain.",
        "- iptables -A INPUT -s $ALLOWED_SUBNET -j ACCEPT",
        "-",
        "- # Set default policies to DROP for INPUT and FORWARD chains.",
        "- iptables -P INPUT DROP",
        "- iptables -P FORWARD DROP",
        "- iptables -P OUTPUT ACCEPT",
        "-",
        "- # Log dropped packets (optional).",
        "- iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "-",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ #!/bin/bash",
        "+ # Install necessary packages",
        "+ apt-get update && apt-get install -y iptables",
        "+",
        "+ # Flush existing rules",
        "+ iptables -F",
        "+",
        "+ # Set default policies to DROP for INPUT and FORWARD chains.",
        "+ iptables -P INPUT DROP",
        "+ iptables -P FORWARD DROP",
        "+",
        "+ # Allow loopback interface traffic in the INPUT chain.",
        "+ iptables -A INPUT -i lo -j ACCEPT",
        "+",
        "+ # Allow established connections in the INPUT chain.",
        "+ iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "+",
        "+ # Allow traffic from the allowed subnet in the INPUT chain.",
        "+ iptables -A INPUT -s 10.244.0.0/16 -j ACCEPT",
        "+",
        "+ # Log dropped packets (optional).",
        "+ iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "+",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 4}, s: \"4\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 8589934592}, Format: \"BinarySI\"},",
        "- },",
        "+ Limits: nil,",
        "- Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Requests: nil,",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-c988q\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "TerminationGracePeriodSeconds: &30,",
        "ActiveDeadlineSeconds: nil,",
        "- DNSPolicy: \"ClusterFirst\",",
        "+ DNSPolicy: \"None\",",
        "NodeSelector: nil,",
        "ServiceAccountName: \"default\",",
        "... // 12 identical fields",
        "Priority: &0,",
        "PreemptionPolicy: &\"PreemptLowerPriority\",",
        "- DNSConfig: nil,",
        "+ DNSConfig: &core.PodDNSConfig{Nameservers: []string{\"10.99.30.112\"}},",
        "ReadinessGates: nil,",
        "RuntimeClassName: nil,",
        "... // 6 identical fields",
        "}",
        "]\",\"reason\":\"Invalid\",\"details\":{\"name\":\"firewall-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueInvalid\",\"message\":\"Invalid value: \"Burstable\": Pod QoS is immutable\",\"field\":\"metadata\"},{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-c988q\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "- Name: \"firewall-container\",",
        "+ Name: \"vnf-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- #!/bin/bash",
        "-",
        "- ALLOWED_SUBNET=\"10.244.0.0/16\"",
        "-",
        "- # Install iptables if not already installed",
        "- apt-get update && apt-get install -y iptables",
        "-",
        "- # Flush existing rules",
        "- iptables -F",
        "-",
        "- # Allow loopback interface traffic in the INPUT chain.",
        "- iptables -A INPUT -i lo -j ACCEPT",
        "-",
        "- # Allow established connections in the INPUT chain.",
        "- iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "-",
        "- # Allow traffic from the allowed subnet in the INPUT chain.",
        "- iptables -A INPUT -s $ALLOWED_SUBNET -j ACCEPT",
        "-",
        "- # Set default policies to DROP for INPUT and FORWARD chains.",
        "- iptables -P INPUT DROP",
        "- iptables -P FORWARD DROP",
        "- iptables -P OUTPUT ACCEPT",
        "-",
        "- # Log dropped packets (optional).",
        "- iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "-",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ #!/bin/bash",
        "+ # Install necessary packages",
        "+ apt-get update && apt-get install -y iptables",
        "+",
        "+ # Flush existing rules",
        "+ iptables -F",
        "+",
        "+ # Set default policies to DROP for INPUT and FORWARD chains.",
        "+ iptables -P INPUT DROP",
        "+ iptables -P FORWARD DROP",
        "+",
        "+ # Allow loopback interface traffic in the INPUT chain.",
        "+ iptables -A INPUT -i lo -j ACCEPT",
        "+",
        "+ # Allow established connections in the INPUT chain.",
        "+ iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "+",
        "+ # Allow traffic from the allowed subnet in the INPUT chain.",
        "+ iptables -A INPUT -s 10.244.0.0/16 -j ACCEPT",
        "+",
        "+ # Log dropped packets (optional).",
        "+ iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "+",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 4}, s: \"4\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 8589934592}, Format: \"BinarySI\"},",
        "- },",
        "+ Limits: nil,",
        "- Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 2}, s: \"2\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 4294967296}, s: \"4Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Requests: nil,",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-c988q\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "- SecurityContext: nil,",
        "+ SecurityContext: &core.SecurityContext{Privileged: &true},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "TerminationGracePeriodSeconds: &30,",
        "ActiveDeadlineSeconds: nil,",
        "- DNSPolicy: \"ClusterFirst\",",
        "+ DNSPolicy: \"None\",",
        "NodeSelector: nil,",
        "ServiceAccountName: \"default\",",
        "... // 12 identical fields",
        "Priority: &0,",
        "PreemptionPolicy: &\"PreemptLowerPriority\",",
        "- DNSConfig: nil,",
        "+ DNSConfig: &core.PodDNSConfig{Nameservers: []string{\"10.99.30.112\"}},",
        "ReadinessGates: nil,",
        "RuntimeClassName: nil,",
        "... // 6 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "make: *** No targets specified and no makefile found. Stop.",
        "make: *** No rule to make target 'install'. Stop.",
        "/bin/bash: line 11: ndpiReader: command not found",
        ""
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "op'.",
        "ERROR: '~ntop' user or team does not exist.",
        ""
    ],
    [
        "op'.",
        "ERROR: '~ntop' user or team does not exist.",
        "",
        "WARNING: apt does not have a stable CLI interface. Use with caution in scripts.",
        "",
        "Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease",
        "Hit:2 http://security.ubuntu.com/ubuntu focal-security InRelease",
        "Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease",
        "Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease",
        "Reading package lists...",
        "Building dependency tree...",
        "Reading state information...",
        "46 packages can be upgraded. Run 'apt list --upgradable' to see them.",
        "",
        "WARNING: apt does not have a stable CLI interface. Use with caution in scripts.",
        "",
        ""
    ],
    [
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [
        "op'.",
        "ERROR: '~ntop' user or team does not exist.",
        "",
        "WARNING: apt does not have a stable CLI interface. Use with caution in scripts.",
        "",
        "Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease",
        "Hit:2 http://security.ubuntu.com/ubuntu focal-security InRelease",
        "Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease",
        "Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease",
        "Reading package lists...",
        "Building dependency tree...",
        "Reading state information...",
        "46 packages can be upgraded. Run 'apt list --upgradable' to see them.",
        "",
        "WARNING: apt does not have a stable CLI interface. Use with caution in scripts.",
        "",
        ""
    ],
    [
        "op'.",
        "ERROR: '~ntop' user or team does not exist.",
        "",
        "WARNING: apt does not have a stable CLI interface. Use with caution in scripts.",
        "",
        ""
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "make: *** No targets specified and no makefile found. Stop.",
        "make: *** No rule to make target 'install'. Stop.",
        "/bin/bash: line 9: ntopng: command not found",
        ""
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "make: *** No targets specified and no makefile found. Stop.",
        "make: *** No rule to make target 'install'. Stop.",
        "/bin/bash: line 10: ndpiReader: command not found",
        ""
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        "make: *** No targets specified and no makefile found. Stop.",
        "make: *** No rule to make target 'install'. Stop.",
        "/bin/bash: line 10: ndpiReader: command not found",
        ""
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "op'.",
        "ERROR: '~ntop' user or team does not exist.",
        "",
        "WARNING: apt does not have a stable CLI interface. Use with caution in scripts.",
        "",
        "Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease",
        "Hit:2 http://security.ubuntu.com/ubuntu focal-security InRelease",
        "Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease",
        "Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease",
        "Reading package lists...",
        "Building dependency tree...",
        "Reading state information...",
        "46 packages can be upgraded. Run 'apt list --upgradable' to see them.",
        "",
        "WARNING: apt does not have a stable CLI interface. Use with caution in scripts.",
        "",
        ""
    ],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-r442c\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"firewall-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- #!/bin/bash",
        "-",
        "- # Update and install necessary packages",
        "- apt-get update && apt-get install -y iptables",
        "-",
        "- # Flush existing rules",
        "- iptables -F",
        "-",
        "- # Set default policies to DROP for INPUT and FORWARD chains.",
        "- iptables -P INPUT DROP",
        "- iptables -P FORWARD DROP",
        "-",
        "- # Allow loopback interface traffic in the INPUT chain.",
        "- iptables -A INPUT -i lo -j ACCEPT",
        "-",
        "- # Allow established connections in the INPUT chain.",
        "- iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "-",
        "- # Allow SSH (port 22) and HTTP (port 80) traffic",
        "- iptables -A INPUT -p tcp --dport 22 -j ACCEPT",
        "- iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "-",
        "- # Log dropped packets (optional).",
        "- iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "-",
        "- # Keep the container running indefinitely",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ #!/bin/bash",
        "+ # Flush existing rules",
        "+ iptables -F",
        "+ # Set default policies to DROP for INPUT and FORWARD chains.",
        "+ iptables -P INPUT DROP",
        "+ iptables -P FORWARD DROP",
        "+ # Allow loopback interface traffic in the INPUT chain.",
        "+ iptables -A INPUT -i lo -j ACCEPT",
        "+ # Allow established connections in the INPUT chain.",
        "+ iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "+ # Allow SSH port 22",
        "+ iptables -A INPUT -p tcp --dport 22 -j ACCEPT",
        "+ # Allow HTTP port 80",
        "+ iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "+ # Log dropped packets (optional).",
        "+ iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Limits: nil,",
        "- Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 500, scale: -3}, s: \"500m\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 1073741824}, s: \"1Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Requests: nil,",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-r442c\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "]\",\"reason\":\"Invalid\",\"details\":{\"name\":\"firewall-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueInvalid\",\"message\":\"Invalid value: \"Burstable\": Pod QoS is immutable\",\"field\":\"metadata\"},{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-r442c\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"firewall-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- #!/bin/bash",
        "-",
        "- # Update and install necessary packages",
        "- apt-get update && apt-get install -y iptables",
        "-",
        "- # Flush existing rules",
        "- iptables -F",
        "-",
        "- # Set default policies to DROP for INPUT and FORWARD chains.",
        "- iptables -P INPUT DROP",
        "- iptables -P FORWARD DROP",
        "-",
        "- # Allow loopback interface traffic in the INPUT chain.",
        "- iptables -A INPUT -i lo -j ACCEPT",
        "-",
        "- # Allow established connections in the INPUT chain.",
        "- iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "-",
        "- # Allow SSH (port 22) and HTTP (port 80) traffic",
        "- iptables -A INPUT -p tcp --dport 22 -j ACCEPT",
        "- iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "-",
        "- # Log dropped packets (optional).",
        "- iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "-",
        "- # Keep the container running indefinitely",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ #!/bin/bash",
        "+ # Flush existing rules",
        "+ iptables -F",
        "+ # Set default policies to DROP for INPUT and FORWARD chains.",
        "+ iptables -P INPUT DROP",
        "+ iptables -P FORWARD DROP",
        "+ # Allow loopback interface traffic in the INPUT chain.",
        "+ iptables -A INPUT -i lo -j ACCEPT",
        "+ # Allow established connections in the INPUT chain.",
        "+ iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT",
        "+ # Allow SSH port 22",
        "+ iptables -A INPUT -p tcp --dport 22 -j ACCEPT",
        "+ # Allow HTTP port 80",
        "+ iptables -A INPUT -p tcp --dport 80 -j ACCEPT",
        "+ # Log dropped packets (optional).",
        "+ iptables -A INPUT -j LOG --log-prefix \"IPTables-Dropped: \" --log-level 7",
        "+ sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: core.ResourceRequirements{",
        "- Limits: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 1}, s: \"1\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 2147483648}, s: \"2Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Limits: nil,",
        "- Requests: core.ResourceList{",
        "- s\"cpu\": {i: resource.int64Amount{value: 500, scale: -3}, s: \"500m\", Format: \"DecimalSI\"},",
        "- s\"memory\": {i: resource.int64Amount{value: 1073741824}, s: \"1Gi\", Format: \"BinarySI\"},",
        "- },",
        "+ Requests: nil,",
        "Claims: nil,",
        "},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-r442c\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 10 identical fields",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [],
    [
        "Container killed, usually due to out of memory (OOM) or manual termination"
    ],
    [
        "Make Error: The source directory \"/tmp/nDPI\" does not appear to contain CMakeLists.txt.",
        "Specify --help for usage, or press the help button on the CMake GUI.",
        ""
    ],
    [
        "op'.",
        "ERROR: '~ntop' user or team does not exist.",
        "Hit:1 http://security.ubuntu.com/ubuntu focal-security InRelease",
        "Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease",
        "Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease",
        "Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease",
        ""
    ],
    [
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-fs28k\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ntopng-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update && apt-get install -y wget gnupg2 curl",
        "- wget https://packages.ntop.org/apt-stable/ntop.key -O- | apt-key add -",
        "- echo \"deb http://apt-stable.ntop.org/ubuntu focal main\" > /etc/apt/sources.list.d/ntop.list",
        "- apt-get update",
        "- apt-get install -y ntopng",
        "- echo \"-i=eth0\" >> /etc/ntopng/ntopng.conf",
        "- echo \"--http-port=3000\" >> /etc/ntopng/ntopng.conf",
        "- echo \"--report-protocols\" >> /etc/ntopng/ntopng.conf",
        "- ntopng -i eth0 --http-port=3000 --report-protocols &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ add-apt-repository ppa:ntop/ntop -y",
        "+ apt update && apt install -y ntopng",
        "+ echo \"-i=eth0\" > /etc/ntopng/ntopng.conf",
        "+ echo \"--report-protocols\" >> /etc/ntopng/ntopng.conf",
        "+ ntopng -i eth0 --report-protocols & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "- Ports: []core.ContainerPort{{ContainerPort: 3000, Protocol: \"TCP\"}},",
        "+ Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: {Limits: {s\"cpu\": {i: {...}, s: \"2\", Format: \"DecimalSI\"}, s\"memory\": {i: {...}, s: \"4Gi\", Format: \"BinarySI\"}}, Requests: {s\"cpu\": {i: {...}, s: \"1\", Format: \"DecimalSI\"}, s\"memory\": {i: {...}, s: \"2Gi\", Format: \"BinarySI\"}}},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-fs28k\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "SecurityContext: &core.SecurityContext{",
        "Capabilities: nil,",
        "- Privileged: &false,",
        "+ Privileged: &true,",
        "SELinuxOptions: nil,",
        "WindowsOptions: nil,",
        "... // 7 identical fields",
        "},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"reason\":\"Invalid\",\"details\":{\"name\":\"ntopng-pod\",\"kind\":\"Pod\",\"causes\":[{\"reason\":\"FieldValueForbidden\",\"message\":\"Forbidden: pod updates may not change fields other than `spec.containers[*].image`,`spec.initContainers[*].image`,`spec.activeDeadlineSeconds`,`spec.tolerations` (only additions to existing tolerations),`spec.terminationGracePeriodSeconds` (allow it to be set to 1 if it was previously negative)",
        "core.PodSpec{",
        "Volumes: {{Name: \"kube-api-access-fs28k\", VolumeSource: {Projected: &{Sources: {{ServiceAccountToken: &{ExpirationSeconds: 3607, Path: \"token\"}}, {ConfigMap: &{LocalObjectReference: {Name: \"kube-root-ca.crt\"}, Items: {{Key: \"ca.crt\", Path: \"ca.crt\"}}}}, {DownwardAPI: &{Items: {{Path: \"namespace\", FieldRef: &{APIVersion: \"v1\", FieldPath: \"metadata.namespace\"}}}}}}, DefaultMode: &420}}}},",
        "InitContainers: nil,",
        "Containers: []core.Container{",
        "{",
        "Name: \"ntopng-container\",",
        "Image: \"dokken/ubuntu-20.04\",",
        "Command: {\"/bin/bash\", \"-c\"},",
        "- Args: []string{",
        "- (",
        "- \"\"\"",
        "- apt-get update && apt-get install -y wget gnupg2 curl",
        "- wget https://packages.ntop.org/apt-stable/ntop.key -O- | apt-key add -",
        "- echo \"deb http://apt-stable.ntop.org/ubuntu focal main\" > /etc/apt/sources.list.d/ntop.list",
        "- apt-get update",
        "- apt-get install -y ntopng",
        "- echo \"-i=eth0\" >> /etc/ntopng/ntopng.conf",
        "- echo \"--http-port=3000\" >> /etc/ntopng/ntopng.conf",
        "- echo \"--report-protocols\" >> /etc/ntopng/ntopng.conf",
        "- ntopng -i eth0 --http-port=3000 --report-protocols &",
        "- sleep infinity",
        "- \"\"\"",
        "- ),",
        "- },",
        "+ Args: []string{",
        "+ (",
        "+ \"\"\"",
        "+ apt update && apt install -y software-properties-common",
        "+ add-apt-repository ppa:ntop/ntop -y",
        "+ apt update && apt install -y ntopng",
        "+ echo \"-i=eth0\" > /etc/ntopng/ntopng.conf",
        "+ echo \"--report-protocols\" >> /etc/ntopng/ntopng.conf",
        "+ ntopng -i eth0 --report-protocols & sleep infinity",
        "+ \"\"\"",
        "+ ),",
        "+ },",
        "WorkingDir: \"\",",
        "- Ports: []core.ContainerPort{{ContainerPort: 3000, Protocol: \"TCP\"}},",
        "+ Ports: nil,",
        "EnvFrom: nil,",
        "Env: nil,",
        "Resources: {Limits: {s\"cpu\": {i: {...}, s: \"2\", Format: \"DecimalSI\"}, s\"memory\": {i: {...}, s: \"4Gi\", Format: \"BinarySI\"}}, Requests: {s\"cpu\": {i: {...}, s: \"1\", Format: \"DecimalSI\"}, s\"memory\": {i: {...}, s: \"2Gi\", Format: \"BinarySI\"}}},",
        "ResizePolicy: nil,",
        "RestartPolicy: nil,",
        "- VolumeMounts: []core.VolumeMount{",
        "- {",
        "- Name: \"kube-api-access-fs28k\",",
        "- ReadOnly: true,",
        "- MountPath: \"/var/run/secrets/kubernetes.io/serviceaccount\",",
        "- },",
        "- },",
        "+ VolumeMounts: nil,",
        "VolumeDevices: nil,",
        "LivenessProbe: nil,",
        "... // 4 identical fields",
        "TerminationMessagePolicy: \"File\",",
        "ImagePullPolicy: \"Always\",",
        "SecurityContext: &core.SecurityContext{",
        "Capabilities: nil,",
        "- Privileged: &false,",
        "+ Privileged: &true,",
        "SELinuxOptions: nil,",
        "WindowsOptions: nil,",
        "... // 7 identical fields",
        "},",
        "Stdin: false,",
        "StdinOnce: false,",
        "TTY: false,",
        "},",
        "},",
        "EphemeralContainers: nil,",
        "RestartPolicy: \"Always\",",
        "... // 28 identical fields",
        "}",
        "\",\"field\":\"spec\"}]},\"code\":422}",
        "'\", \"reason\": \"Unprocessable Entity\"}"
    ],
    [],
    [
        "op'.",
        "ERROR: '~ntop' user or team does not exist.",
        "",
        "WARNING: apt does not have a stable CLI interface. Use with caution in scripts.",
        "",
        "Hit:1 http://security.ubuntu.com/ubuntu focal-security InRelease",
        "Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease",
        "Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease",
        "Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease",
        "Reading package lists...",
        "Building dependency tree...",
        "Reading state information...",
        "46 packages can be upgraded. Run 'apt list --upgradable' to see them.",
        "",
        "WARNING: apt does not have a stable CLI interface. Use with caution in scripts.",
        "",
        ""
    ],
    [
        "Waiting for container to be ready...",
        "Started container myapp",
        "Successfully pulled image \"myapp:latest\"",
        "CrashLoopBackOff: back-off restarting failed container"
    ],
    [
        "Pulling image \"myapp:latest\"",
        "Successfully assigned default/myapp-abcde to node-1",
        "Pod scheduled successfully",
        "FailedScheduling: 0/5 nodes are available: insufficient memory."
    ],
    [
        "Creating Pod default/myapp-abcde",
        "Creating Pod default/myapp-abcde",
        "Pulling image \"myapp:latest\"",
        "Created container myapp",
        "Readiness probe failed: HTTP probe failed with statuscode: 503"
    ],
    [
        "Successfully pulled image \"myapp:latest\"",
        "Successfully pulled image \"myapp:latest\"",
        "Waiting for container to be ready...",
        "Waiting for container to be ready...",
        "Created container myapp",
        "Pod scheduled successfully",
        "rpc error: code = Unknown desc = failed to create Pod sandbox"
    ],
    [
        "Loading modules...",
        "Verifying configuration...",
        "Applying default settings...",
        "Loading modules...",
        "Running pre-checks...",
        "iptables-persistent not found. Attempting to install via apt..."
    ],
    [
        "Running pre-checks...",
        "Connecting to repository...",
        "Extracting files...",
        "Starting service...",
        "iptables-restore: line 3 failed"
    ],
    [
        "Running pre-checks...",
        "Checking system dependencies...",
        "Verifying configuration...",
        "Connecting to repository...",
        "Running pre-checks...",
        "Applying default settings...",
        "iptables: Chain already exists"
    ],
    [
        "Extracting files...",
        "Connecting to repository...",
        "Applying default settings...",
        "Verifying configuration...",
        "Applying default settings...",
        "Starting service...",
        "iptables v1.8.7: unknown option \"--dport\""
    ],
    [
        "Initializing environment...",
        "Checking system dependencies...",
        "Connecting to repository...",
        "iptables: No chain/target/match by that name."
    ],
    [
        "Applying default settings...",
        "Extracting files...",
        "Checking system dependencies...",
        "Checking system dependencies...",
        "iptables: Resource temporarily unavailable"
    ],
    [
        "Loading modules...",
        "Initializing environment...",
        "Connecting to repository...",
        "Applying default settings...",
        "Starting service...",
        "ntopng: Could not connect to Redis at 127.0.0.1:6379 \u2014 Connection refused"
    ],
    [
        "Running pre-checks...",
        "Applying default settings...",
        "Downloading packages...",
        "Initializing environment...",
        "Applying default settings...",
        "Loading modules...",
        "add-apt-repository: command not found"
    ],
    [
        "Loading modules...",
        "Verifying configuration...",
        "Starting service...",
        "[ERRCODE: SC_ERR_NO_RULES(42)] - No rule files found in /etc/suricata/rules"
    ],
    [
        "Loading modules...",
        "Initializing environment...",
        "Extracting files...",
        "Applying default settings...",
        "Downloading packages...",
        "Proxy 'backend-app' has no servers available!"
    ],
    [
        "Checking system dependencies...",
        "Starting service...",
        "Loading modules...",
        "Applying default settings...",
        "Downloading packages...",
        "Starting service...",
        "fatal: not a git repository (or any of the parent directories): .git"
    ]
]